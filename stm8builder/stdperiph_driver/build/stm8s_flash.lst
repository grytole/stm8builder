                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:27:59 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_flash
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _FLASH_Unlock
                                     14 	.globl _FLASH_Lock
                                     15 	.globl _FLASH_DeInit
                                     16 	.globl _FLASH_ITConfig
                                     17 	.globl _FLASH_EraseByte
                                     18 	.globl _FLASH_ProgramByte
                                     19 	.globl _FLASH_ReadByte
                                     20 	.globl _FLASH_ProgramWord
                                     21 	.globl _FLASH_ProgramOptionByte
                                     22 	.globl _FLASH_EraseOptionByte
                                     23 	.globl _FLASH_ReadOptionByte
                                     24 	.globl _FLASH_SetLowPowerMode
                                     25 	.globl _FLASH_SetProgrammingTime
                                     26 	.globl _FLASH_GetLowPowerMode
                                     27 	.globl _FLASH_GetProgrammingTime
                                     28 	.globl _FLASH_GetBootSize
                                     29 	.globl _FLASH_GetFlagStatus
                                     30 	.globl _FLASH_WaitForLastOperation
                                     31 	.globl _FLASH_EraseBlock
                                     32 	.globl _FLASH_ProgramBlock
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DATA
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area INITIALIZED
                                     41 ;--------------------------------------------------------
                                     42 ; absolute external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DABS (ABS)
                                     45 ;--------------------------------------------------------
                                     46 ; global & static initialisations
                                     47 ;--------------------------------------------------------
                                     48 	.area HOME
                                     49 	.area GSINIT
                                     50 	.area GSFINAL
                                     51 	.area GSINIT
                                     52 ;--------------------------------------------------------
                                     53 ; Home
                                     54 ;--------------------------------------------------------
                                     55 	.area HOME
                                     56 	.area HOME
                                     57 ;--------------------------------------------------------
                                     58 ; code
                                     59 ;--------------------------------------------------------
                                     60 	.area CODE
                                     61 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 87: void FLASH_Unlock(FLASH_MemType_TypeDef FLASH_MemType)
                                     62 ;	-----------------------------------------
                                     63 ;	 function FLASH_Unlock
                                     64 ;	-----------------------------------------
      000000                         65 _FLASH_Unlock:
      000000 88               [ 1]   66 	push	a
                                     67 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 90: assert_param(IS_MEMORY_TYPE_OK(FLASH_MemType));
      000001 7B 04            [ 1]   68 	ld	a, (0x04, sp)
      000003 A1 FD            [ 1]   69 	cp	a, #0xfd
      000005 26 06            [ 1]   70 	jrne	00124$
      000007 A6 01            [ 1]   71 	ld	a, #0x01
      000009 6B 01            [ 1]   72 	ld	(0x01, sp), a
      00000B 20 02            [ 2]   73 	jra	00125$
      00000D                         74 00124$:
      00000D 0F 01            [ 1]   75 	clr	(0x01, sp)
      00000F                         76 00125$:
      00000F 0D 01            [ 1]   77 	tnz	(0x01, sp)
      000011 26 17            [ 1]   78 	jrne	00107$
      000013 7B 04            [ 1]   79 	ld	a, (0x04, sp)
      000015 A1 F7            [ 1]   80 	cp	a, #0xf7
      000017 27 11            [ 1]   81 	jreq	00107$
      000019 90 AEr05rA3      [ 2]   82 	ldw	y, #___str_0+0
      00001D 4B 5A            [ 1]   83 	push	#0x5a
      00001F 5F               [ 1]   84 	clrw	x
      000020 89               [ 2]   85 	pushw	x
      000021 4B 00            [ 1]   86 	push	#0x00
      000023 90 89            [ 2]   87 	pushw	y
      000025 CDr00r00         [ 4]   88 	call	_assert_failed
      000028 5B 06            [ 2]   89 	addw	sp, #6
      00002A                         90 00107$:
                                     91 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 93: if(FLASH_MemType == FLASH_MEMTYPE_PROG)
      00002A 0D 01            [ 1]   92 	tnz	(0x01, sp)
      00002C 27 0A            [ 1]   93 	jreq	00102$
                                     94 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 95: FLASH->PUKR = FLASH_RASS_KEY1;
      00002E 35 56 50 62      [ 1]   95 	mov	0x5062+0, #0x56
                                     96 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 96: FLASH->PUKR = FLASH_RASS_KEY2;
      000032 35 AE 50 62      [ 1]   97 	mov	0x5062+0, #0xae
      000036 20 08            [ 2]   98 	jra	00104$
      000038                         99 00102$:
                                    100 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 101: FLASH->DUKR = FLASH_RASS_KEY2; /* Warning: keys are reversed on data memory !!! */
      000038 35 AE 50 64      [ 1]  101 	mov	0x5064+0, #0xae
                                    102 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 102: FLASH->DUKR = FLASH_RASS_KEY1;
      00003C 35 56 50 64      [ 1]  103 	mov	0x5064+0, #0x56
      000040                        104 00104$:
      000040 84               [ 1]  105 	pop	a
      000041 81               [ 4]  106 	ret
                                    107 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 112: void FLASH_Lock(FLASH_MemType_TypeDef FLASH_MemType)
                                    108 ;	-----------------------------------------
                                    109 ;	 function FLASH_Lock
                                    110 ;	-----------------------------------------
      000042                        111 _FLASH_Lock:
                                    112 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 115: assert_param(IS_MEMORY_TYPE_OK(FLASH_MemType));
      000042 7B 03            [ 1]  113 	ld	a, (0x03, sp)
      000044 A1 FD            [ 1]  114 	cp	a, #0xfd
      000046 27 17            [ 1]  115 	jreq	00104$
      000048 7B 03            [ 1]  116 	ld	a, (0x03, sp)
      00004A A1 F7            [ 1]  117 	cp	a, #0xf7
      00004C 27 11            [ 1]  118 	jreq	00104$
      00004E 90 AEr05rA3      [ 2]  119 	ldw	y, #___str_0+0
      000052 4B 73            [ 1]  120 	push	#0x73
      000054 5F               [ 1]  121 	clrw	x
      000055 89               [ 2]  122 	pushw	x
      000056 4B 00            [ 1]  123 	push	#0x00
      000058 90 89            [ 2]  124 	pushw	y
      00005A CDr00r00         [ 4]  125 	call	_assert_failed
      00005D 5B 06            [ 2]  126 	addw	sp, #6
      00005F                        127 00104$:
                                    128 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 118: FLASH->IAPSR &= (uint8_t)FLASH_MemType;
      00005F AE 50 5F         [ 2]  129 	ldw	x, #0x505f
      000062 F6               [ 1]  130 	ld	a, (x)
      000063 14 03            [ 1]  131 	and	a, (0x03, sp)
      000065 AE 50 5F         [ 2]  132 	ldw	x, #0x505f
      000068 F7               [ 1]  133 	ld	(x), a
      000069 81               [ 4]  134 	ret
                                    135 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 126: void FLASH_DeInit(void)
                                    136 ;	-----------------------------------------
                                    137 ;	 function FLASH_DeInit
                                    138 ;	-----------------------------------------
      00006A                        139 _FLASH_DeInit:
                                    140 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 128: FLASH->CR1 = FLASH_CR1_RESET_VALUE;
      00006A 35 00 50 5A      [ 1]  141 	mov	0x505a+0, #0x00
                                    142 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 129: FLASH->CR2 = FLASH_CR2_RESET_VALUE;
      00006E 35 00 50 5B      [ 1]  143 	mov	0x505b+0, #0x00
                                    144 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 130: FLASH->NCR2 = FLASH_NCR2_RESET_VALUE;
      000072 35 FF 50 5C      [ 1]  145 	mov	0x505c+0, #0xff
                                    146 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 131: FLASH->IAPSR &= (uint8_t)(~FLASH_IAPSR_DUL);
      000076 AE 50 5F         [ 2]  147 	ldw	x, #0x505f
      000079 F6               [ 1]  148 	ld	a, (x)
      00007A A4 F7            [ 1]  149 	and	a, #0xf7
      00007C F7               [ 1]  150 	ld	(x), a
                                    151 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 132: FLASH->IAPSR &= (uint8_t)(~FLASH_IAPSR_PUL);
      00007D AE 50 5F         [ 2]  152 	ldw	x, #0x505f
      000080 F6               [ 1]  153 	ld	a, (x)
      000081 A4 FD            [ 1]  154 	and	a, #0xfd
      000083 F7               [ 1]  155 	ld	(x), a
                                    156 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 133: (void) FLASH->IAPSR; /* Reading of this register causes the clearing of status flags */
      000084 AE 50 5F         [ 2]  157 	ldw	x, #0x505f
      000087 F6               [ 1]  158 	ld	a, (x)
      000088 81               [ 4]  159 	ret
                                    160 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 142: void FLASH_ITConfig(FunctionalState NewState)
                                    161 ;	-----------------------------------------
                                    162 ;	 function FLASH_ITConfig
                                    163 ;	-----------------------------------------
      000089                        164 _FLASH_ITConfig:
                                    165 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 145: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000089 0D 03            [ 1]  166 	tnz	(0x03, sp)
      00008B 27 17            [ 1]  167 	jreq	00107$
      00008D 7B 03            [ 1]  168 	ld	a, (0x03, sp)
      00008F A1 01            [ 1]  169 	cp	a, #0x01
      000091 27 11            [ 1]  170 	jreq	00107$
      000093 90 AEr05rA3      [ 2]  171 	ldw	y, #___str_0+0
      000097 4B 91            [ 1]  172 	push	#0x91
      000099 5F               [ 1]  173 	clrw	x
      00009A 89               [ 2]  174 	pushw	x
      00009B 4B 00            [ 1]  175 	push	#0x00
      00009D 90 89            [ 2]  176 	pushw	y
      00009F CDr00r00         [ 4]  177 	call	_assert_failed
      0000A2 5B 06            [ 2]  178 	addw	sp, #6
      0000A4                        179 00107$:
                                    180 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 147: if(NewState != DISABLE)
      0000A4 0D 03            [ 1]  181 	tnz	(0x03, sp)
      0000A6 27 09            [ 1]  182 	jreq	00102$
                                    183 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 149: FLASH->CR1 |= FLASH_CR1_IE; /* Enables the interrupt sources */
      0000A8 AE 50 5A         [ 2]  184 	ldw	x, #0x505a
      0000AB F6               [ 1]  185 	ld	a, (x)
      0000AC AA 02            [ 1]  186 	or	a, #0x02
      0000AE F7               [ 1]  187 	ld	(x), a
      0000AF 20 07            [ 2]  188 	jra	00104$
      0000B1                        189 00102$:
                                    190 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 153: FLASH->CR1 &= (uint8_t)(~FLASH_CR1_IE); /* Disables the interrupt sources */
      0000B1 AE 50 5A         [ 2]  191 	ldw	x, #0x505a
      0000B4 F6               [ 1]  192 	ld	a, (x)
      0000B5 A4 FD            [ 1]  193 	and	a, #0xfd
      0000B7 F7               [ 1]  194 	ld	(x), a
      0000B8                        195 00104$:
      0000B8 81               [ 4]  196 	ret
                                    197 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 164: void FLASH_EraseByte(uint32_t Address)
                                    198 ;	-----------------------------------------
                                    199 ;	 function FLASH_EraseByte
                                    200 ;	-----------------------------------------
      0000B9                        201 _FLASH_EraseByte:
                                    202 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 167: assert_param(IS_FLASH_ADDRESS_OK(Address));
      0000B9 1E 05            [ 2]  203 	ldw	x, (0x05, sp)
      0000BB A3 80 00         [ 2]  204 	cpw	x, #0x8000
      0000BE 7B 04            [ 1]  205 	ld	a, (0x04, sp)
      0000C0 A2 00            [ 1]  206 	sbc	a, #0x00
      0000C2 7B 03            [ 1]  207 	ld	a, (0x03, sp)
      0000C4 A2 00            [ 1]  208 	sbc	a, #0x00
      0000C6 25 0D            [ 1]  209 	jrc	00110$
      0000C8 AE 9F FF         [ 2]  210 	ldw	x, #0x9fff
      0000CB 13 05            [ 2]  211 	cpw	x, (0x05, sp)
      0000CD 4F               [ 1]  212 	clr	a
      0000CE 12 04            [ 1]  213 	sbc	a, (0x04, sp)
      0000D0 4F               [ 1]  214 	clr	a
      0000D1 12 03            [ 1]  215 	sbc	a, (0x03, sp)
      0000D3 24 2D            [ 1]  216 	jrnc	00104$
      0000D5                        217 00110$:
      0000D5 1E 05            [ 2]  218 	ldw	x, (0x05, sp)
      0000D7 A3 40 00         [ 2]  219 	cpw	x, #0x4000
      0000DA 7B 04            [ 1]  220 	ld	a, (0x04, sp)
      0000DC A2 00            [ 1]  221 	sbc	a, #0x00
      0000DE 7B 03            [ 1]  222 	ld	a, (0x03, sp)
      0000E0 A2 00            [ 1]  223 	sbc	a, #0x00
      0000E2 25 0D            [ 1]  224 	jrc	00103$
      0000E4 AE 42 7F         [ 2]  225 	ldw	x, #0x427f
      0000E7 13 05            [ 2]  226 	cpw	x, (0x05, sp)
      0000E9 4F               [ 1]  227 	clr	a
      0000EA 12 04            [ 1]  228 	sbc	a, (0x04, sp)
      0000EC 4F               [ 1]  229 	clr	a
      0000ED 12 03            [ 1]  230 	sbc	a, (0x03, sp)
      0000EF 24 11            [ 1]  231 	jrnc	00104$
      0000F1                        232 00103$:
      0000F1 90 AEr05rA3      [ 2]  233 	ldw	y, #___str_0+0
      0000F5 4B A7            [ 1]  234 	push	#0xa7
      0000F7 5F               [ 1]  235 	clrw	x
      0000F8 89               [ 2]  236 	pushw	x
      0000F9 4B 00            [ 1]  237 	push	#0x00
      0000FB 90 89            [ 2]  238 	pushw	y
      0000FD CDr00r00         [ 4]  239 	call	_assert_failed
      000100 5B 06            [ 2]  240 	addw	sp, #6
      000102                        241 00104$:
                                    242 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 170: *(PointerAttr uint8_t*) (MemoryAddressCast)Address = FLASH_CLEAR_BYTE; 
      000102 1E 05            [ 2]  243 	ldw	x, (0x05, sp)
      000104 7F               [ 1]  244 	clr	(x)
      000105 81               [ 4]  245 	ret
                                    246 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 181: void FLASH_ProgramByte(uint32_t Address, uint8_t Data)
                                    247 ;	-----------------------------------------
                                    248 ;	 function FLASH_ProgramByte
                                    249 ;	-----------------------------------------
      000106                        250 _FLASH_ProgramByte:
                                    251 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 184: assert_param(IS_FLASH_ADDRESS_OK(Address));
      000106 1E 05            [ 2]  252 	ldw	x, (0x05, sp)
      000108 A3 80 00         [ 2]  253 	cpw	x, #0x8000
      00010B 7B 04            [ 1]  254 	ld	a, (0x04, sp)
      00010D A2 00            [ 1]  255 	sbc	a, #0x00
      00010F 7B 03            [ 1]  256 	ld	a, (0x03, sp)
      000111 A2 00            [ 1]  257 	sbc	a, #0x00
      000113 25 0D            [ 1]  258 	jrc	00110$
      000115 AE 9F FF         [ 2]  259 	ldw	x, #0x9fff
      000118 13 05            [ 2]  260 	cpw	x, (0x05, sp)
      00011A 4F               [ 1]  261 	clr	a
      00011B 12 04            [ 1]  262 	sbc	a, (0x04, sp)
      00011D 4F               [ 1]  263 	clr	a
      00011E 12 03            [ 1]  264 	sbc	a, (0x03, sp)
      000120 24 2D            [ 1]  265 	jrnc	00104$
      000122                        266 00110$:
      000122 1E 05            [ 2]  267 	ldw	x, (0x05, sp)
      000124 A3 40 00         [ 2]  268 	cpw	x, #0x4000
      000127 7B 04            [ 1]  269 	ld	a, (0x04, sp)
      000129 A2 00            [ 1]  270 	sbc	a, #0x00
      00012B 7B 03            [ 1]  271 	ld	a, (0x03, sp)
      00012D A2 00            [ 1]  272 	sbc	a, #0x00
      00012F 25 0D            [ 1]  273 	jrc	00103$
      000131 AE 42 7F         [ 2]  274 	ldw	x, #0x427f
      000134 13 05            [ 2]  275 	cpw	x, (0x05, sp)
      000136 4F               [ 1]  276 	clr	a
      000137 12 04            [ 1]  277 	sbc	a, (0x04, sp)
      000139 4F               [ 1]  278 	clr	a
      00013A 12 03            [ 1]  279 	sbc	a, (0x03, sp)
      00013C 24 11            [ 1]  280 	jrnc	00104$
      00013E                        281 00103$:
      00013E 90 AEr05rA3      [ 2]  282 	ldw	y, #___str_0+0
      000142 4B B8            [ 1]  283 	push	#0xb8
      000144 5F               [ 1]  284 	clrw	x
      000145 89               [ 2]  285 	pushw	x
      000146 4B 00            [ 1]  286 	push	#0x00
      000148 90 89            [ 2]  287 	pushw	y
      00014A CDr00r00         [ 4]  288 	call	_assert_failed
      00014D 5B 06            [ 2]  289 	addw	sp, #6
      00014F                        290 00104$:
                                    291 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 185: *(PointerAttr uint8_t*) (MemoryAddressCast)Address = Data;
      00014F 1E 05            [ 2]  292 	ldw	x, (0x05, sp)
      000151 7B 07            [ 1]  293 	ld	a, (0x07, sp)
      000153 F7               [ 1]  294 	ld	(x), a
      000154 81               [ 4]  295 	ret
                                    296 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 195: uint8_t FLASH_ReadByte(uint32_t Address)
                                    297 ;	-----------------------------------------
                                    298 ;	 function FLASH_ReadByte
                                    299 ;	-----------------------------------------
      000155                        300 _FLASH_ReadByte:
                                    301 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 198: assert_param(IS_FLASH_ADDRESS_OK(Address));
      000155 1E 05            [ 2]  302 	ldw	x, (0x05, sp)
      000157 A3 80 00         [ 2]  303 	cpw	x, #0x8000
      00015A 7B 04            [ 1]  304 	ld	a, (0x04, sp)
      00015C A2 00            [ 1]  305 	sbc	a, #0x00
      00015E 7B 03            [ 1]  306 	ld	a, (0x03, sp)
      000160 A2 00            [ 1]  307 	sbc	a, #0x00
      000162 25 0D            [ 1]  308 	jrc	00110$
      000164 AE 9F FF         [ 2]  309 	ldw	x, #0x9fff
      000167 13 05            [ 2]  310 	cpw	x, (0x05, sp)
      000169 4F               [ 1]  311 	clr	a
      00016A 12 04            [ 1]  312 	sbc	a, (0x04, sp)
      00016C 4F               [ 1]  313 	clr	a
      00016D 12 03            [ 1]  314 	sbc	a, (0x03, sp)
      00016F 24 2D            [ 1]  315 	jrnc	00104$
      000171                        316 00110$:
      000171 1E 05            [ 2]  317 	ldw	x, (0x05, sp)
      000173 A3 40 00         [ 2]  318 	cpw	x, #0x4000
      000176 7B 04            [ 1]  319 	ld	a, (0x04, sp)
      000178 A2 00            [ 1]  320 	sbc	a, #0x00
      00017A 7B 03            [ 1]  321 	ld	a, (0x03, sp)
      00017C A2 00            [ 1]  322 	sbc	a, #0x00
      00017E 25 0D            [ 1]  323 	jrc	00103$
      000180 AE 42 7F         [ 2]  324 	ldw	x, #0x427f
      000183 13 05            [ 2]  325 	cpw	x, (0x05, sp)
      000185 4F               [ 1]  326 	clr	a
      000186 12 04            [ 1]  327 	sbc	a, (0x04, sp)
      000188 4F               [ 1]  328 	clr	a
      000189 12 03            [ 1]  329 	sbc	a, (0x03, sp)
      00018B 24 11            [ 1]  330 	jrnc	00104$
      00018D                        331 00103$:
      00018D 90 AEr05rA3      [ 2]  332 	ldw	y, #___str_0+0
      000191 4B C6            [ 1]  333 	push	#0xc6
      000193 5F               [ 1]  334 	clrw	x
      000194 89               [ 2]  335 	pushw	x
      000195 4B 00            [ 1]  336 	push	#0x00
      000197 90 89            [ 2]  337 	pushw	y
      000199 CDr00r00         [ 4]  338 	call	_assert_failed
      00019C 5B 06            [ 2]  339 	addw	sp, #6
      00019E                        340 00104$:
                                    341 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 201: return(*(PointerAttr uint8_t *) (MemoryAddressCast)Address); 
      00019E 1E 05            [ 2]  342 	ldw	x, (0x05, sp)
      0001A0 F6               [ 1]  343 	ld	a, (x)
      0001A1 81               [ 4]  344 	ret
                                    345 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 212: void FLASH_ProgramWord(uint32_t Address, uint32_t Data)
                                    346 ;	-----------------------------------------
                                    347 ;	 function FLASH_ProgramWord
                                    348 ;	-----------------------------------------
      0001A2                        349 _FLASH_ProgramWord:
      0001A2 52 04            [ 2]  350 	sub	sp, #4
                                    351 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 215: assert_param(IS_FLASH_ADDRESS_OK(Address));
      0001A4 1E 09            [ 2]  352 	ldw	x, (0x09, sp)
      0001A6 A3 80 00         [ 2]  353 	cpw	x, #0x8000
      0001A9 7B 08            [ 1]  354 	ld	a, (0x08, sp)
      0001AB A2 00            [ 1]  355 	sbc	a, #0x00
      0001AD 7B 07            [ 1]  356 	ld	a, (0x07, sp)
      0001AF A2 00            [ 1]  357 	sbc	a, #0x00
      0001B1 25 0D            [ 1]  358 	jrc	00110$
      0001B3 AE 9F FF         [ 2]  359 	ldw	x, #0x9fff
      0001B6 13 09            [ 2]  360 	cpw	x, (0x09, sp)
      0001B8 4F               [ 1]  361 	clr	a
      0001B9 12 08            [ 1]  362 	sbc	a, (0x08, sp)
      0001BB 4F               [ 1]  363 	clr	a
      0001BC 12 07            [ 1]  364 	sbc	a, (0x07, sp)
      0001BE 24 2D            [ 1]  365 	jrnc	00104$
      0001C0                        366 00110$:
      0001C0 1E 09            [ 2]  367 	ldw	x, (0x09, sp)
      0001C2 A3 40 00         [ 2]  368 	cpw	x, #0x4000
      0001C5 7B 08            [ 1]  369 	ld	a, (0x08, sp)
      0001C7 A2 00            [ 1]  370 	sbc	a, #0x00
      0001C9 7B 07            [ 1]  371 	ld	a, (0x07, sp)
      0001CB A2 00            [ 1]  372 	sbc	a, #0x00
      0001CD 25 0D            [ 1]  373 	jrc	00103$
      0001CF AE 42 7F         [ 2]  374 	ldw	x, #0x427f
      0001D2 13 09            [ 2]  375 	cpw	x, (0x09, sp)
      0001D4 4F               [ 1]  376 	clr	a
      0001D5 12 08            [ 1]  377 	sbc	a, (0x08, sp)
      0001D7 4F               [ 1]  378 	clr	a
      0001D8 12 07            [ 1]  379 	sbc	a, (0x07, sp)
      0001DA 24 11            [ 1]  380 	jrnc	00104$
      0001DC                        381 00103$:
      0001DC 90 AEr05rA3      [ 2]  382 	ldw	y, #___str_0+0
      0001E0 4B D7            [ 1]  383 	push	#0xd7
      0001E2 5F               [ 1]  384 	clrw	x
      0001E3 89               [ 2]  385 	pushw	x
      0001E4 4B 00            [ 1]  386 	push	#0x00
      0001E6 90 89            [ 2]  387 	pushw	y
      0001E8 CDr00r00         [ 4]  388 	call	_assert_failed
      0001EB 5B 06            [ 2]  389 	addw	sp, #6
      0001ED                        390 00104$:
                                    391 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 218: FLASH->CR2 |= FLASH_CR2_WPRG;
      0001ED AE 50 5B         [ 2]  392 	ldw	x, #0x505b
      0001F0 F6               [ 1]  393 	ld	a, (x)
      0001F1 AA 40            [ 1]  394 	or	a, #0x40
      0001F3 F7               [ 1]  395 	ld	(x), a
                                    396 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 219: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NWPRG);
      0001F4 AE 50 5C         [ 2]  397 	ldw	x, #0x505c
      0001F7 F6               [ 1]  398 	ld	a, (x)
      0001F8 A4 BF            [ 1]  399 	and	a, #0xbf
      0001FA F7               [ 1]  400 	ld	(x), a
                                    401 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 222: *((PointerAttr uint8_t*)(MemoryAddressCast)Address)       = *((uint8_t*)(&Data));
      0001FB 16 09            [ 2]  402 	ldw	y, (0x09, sp)
      0001FD 17 01            [ 2]  403 	ldw	(0x01, sp), y
      0001FF 96               [ 1]  404 	ldw	x, sp
      000200 1C 00 0B         [ 2]  405 	addw	x, #11
      000203 1F 03            [ 2]  406 	ldw	(0x03, sp), x
      000205 1E 03            [ 2]  407 	ldw	x, (0x03, sp)
      000207 F6               [ 1]  408 	ld	a, (x)
      000208 1E 01            [ 2]  409 	ldw	x, (0x01, sp)
      00020A F7               [ 1]  410 	ld	(x), a
                                    411 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 224: *(((PointerAttr uint8_t*)(MemoryAddressCast)Address) + 1) = *((uint8_t*)(&Data)+1); 
      00020B 1E 01            [ 2]  412 	ldw	x, (0x01, sp)
      00020D 5C               [ 2]  413 	incw	x
      00020E 16 03            [ 2]  414 	ldw	y, (0x03, sp)
      000210 90 E6 01         [ 1]  415 	ld	a, (0x1, y)
      000213 F7               [ 1]  416 	ld	(x), a
                                    417 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 226: *(((PointerAttr uint8_t*)(MemoryAddressCast)Address) + 2) = *((uint8_t*)(&Data)+2); 
      000214 1E 01            [ 2]  418 	ldw	x, (0x01, sp)
      000216 5C               [ 2]  419 	incw	x
      000217 5C               [ 2]  420 	incw	x
      000218 16 03            [ 2]  421 	ldw	y, (0x03, sp)
      00021A 90 E6 02         [ 1]  422 	ld	a, (0x2, y)
      00021D F7               [ 1]  423 	ld	(x), a
                                    424 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 228: *(((PointerAttr uint8_t*)(MemoryAddressCast)Address) + 3) = *((uint8_t*)(&Data)+3); 
      00021E 1E 01            [ 2]  425 	ldw	x, (0x01, sp)
      000220 1C 00 03         [ 2]  426 	addw	x, #0x0003
      000223 16 03            [ 2]  427 	ldw	y, (0x03, sp)
      000225 90 E6 03         [ 1]  428 	ld	a, (0x3, y)
      000228 F7               [ 1]  429 	ld	(x), a
      000229 5B 04            [ 2]  430 	addw	sp, #4
      00022B 81               [ 4]  431 	ret
                                    432 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 237: void FLASH_ProgramOptionByte(uint16_t Address, uint8_t Data)
                                    433 ;	-----------------------------------------
                                    434 ;	 function FLASH_ProgramOptionByte
                                    435 ;	-----------------------------------------
      00022C                        436 _FLASH_ProgramOptionByte:
                                    437 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 240: assert_param(IS_OPTION_BYTE_ADDRESS_OK(Address));
      00022C 1E 03            [ 2]  438 	ldw	x, (0x03, sp)
      00022E A3 48 00         [ 2]  439 	cpw	x, #0x4800
      000231 25 07            [ 1]  440 	jrc	00106$
      000233 1E 03            [ 2]  441 	ldw	x, (0x03, sp)
      000235 A3 48 7F         [ 2]  442 	cpw	x, #0x487f
      000238 23 11            [ 2]  443 	jrule	00107$
      00023A                        444 00106$:
      00023A 90 AEr05rA3      [ 2]  445 	ldw	y, #___str_0+0
      00023E 4B F0            [ 1]  446 	push	#0xf0
      000240 5F               [ 1]  447 	clrw	x
      000241 89               [ 2]  448 	pushw	x
      000242 4B 00            [ 1]  449 	push	#0x00
      000244 90 89            [ 2]  450 	pushw	y
      000246 CDr00r00         [ 4]  451 	call	_assert_failed
      000249 5B 06            [ 2]  452 	addw	sp, #6
      00024B                        453 00107$:
                                    454 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 243: FLASH->CR2 |= FLASH_CR2_OPT;
      00024B 72 1E 50 5B      [ 1]  455 	bset	0x505b, #7
                                    456 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 244: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NOPT);
      00024F AE 50 5C         [ 2]  457 	ldw	x, #0x505c
      000252 F6               [ 1]  458 	ld	a, (x)
      000253 A4 7F            [ 1]  459 	and	a, #0x7f
      000255 F7               [ 1]  460 	ld	(x), a
                                    461 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 250: *((NEAR uint8_t*)Address) = Data;
      000256 1E 03            [ 2]  462 	ldw	x, (0x03, sp)
                                    463 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 247: if(Address == 0x4800)
      000258 89               [ 2]  464 	pushw	x
      000259 1E 05            [ 2]  465 	ldw	x, (0x05, sp)
      00025B A3 48 00         [ 2]  466 	cpw	x, #0x4800
      00025E 85               [ 2]  467 	popw	x
      00025F 26 05            [ 1]  468 	jrne	00102$
                                    469 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 250: *((NEAR uint8_t*)Address) = Data;
      000261 7B 05            [ 1]  470 	ld	a, (0x05, sp)
      000263 F7               [ 1]  471 	ld	(x), a
      000264 20 0A            [ 2]  472 	jra	00103$
      000266                        473 00102$:
                                    474 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 255: *((NEAR uint8_t*)Address) = Data;
      000266 7B 05            [ 1]  475 	ld	a, (0x05, sp)
      000268 F7               [ 1]  476 	ld	(x), a
                                    477 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 256: *((NEAR uint8_t*)((uint16_t)(Address + 1))) = (uint8_t)(~Data);
      000269 1E 03            [ 2]  478 	ldw	x, (0x03, sp)
      00026B 5C               [ 2]  479 	incw	x
      00026C 7B 05            [ 1]  480 	ld	a, (0x05, sp)
      00026E 43               [ 1]  481 	cpl	a
      00026F F7               [ 1]  482 	ld	(x), a
      000270                        483 00103$:
                                    484 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 258: FLASH_WaitForLastOperation(FLASH_MEMTYPE_PROG);
      000270 4B FD            [ 1]  485 	push	#0xfd
      000272 CDr04r01         [ 4]  486 	call	_FLASH_WaitForLastOperation
      000275 84               [ 1]  487 	pop	a
                                    488 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 261: FLASH->CR2 &= (uint8_t)(~FLASH_CR2_OPT);
      000276 72 1F 50 5B      [ 1]  489 	bres	0x505b, #7
                                    490 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 262: FLASH->NCR2 |= FLASH_NCR2_NOPT;
      00027A 72 1E 50 5C      [ 1]  491 	bset	0x505c, #7
      00027E 81               [ 4]  492 	ret
                                    493 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 270: void FLASH_EraseOptionByte(uint16_t Address)
                                    494 ;	-----------------------------------------
                                    495 ;	 function FLASH_EraseOptionByte
                                    496 ;	-----------------------------------------
      00027F                        497 _FLASH_EraseOptionByte:
                                    498 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 273: assert_param(IS_OPTION_BYTE_ADDRESS_OK(Address));
      00027F 1E 03            [ 2]  499 	ldw	x, (0x03, sp)
      000281 A3 48 00         [ 2]  500 	cpw	x, #0x4800
      000284 25 07            [ 1]  501 	jrc	00106$
      000286 1E 03            [ 2]  502 	ldw	x, (0x03, sp)
      000288 A3 48 7F         [ 2]  503 	cpw	x, #0x487f
      00028B 23 11            [ 2]  504 	jrule	00107$
      00028D                        505 00106$:
      00028D 90 AEr05rA3      [ 2]  506 	ldw	y, #___str_0+0
      000291 4B 11            [ 1]  507 	push	#0x11
      000293 4B 01            [ 1]  508 	push	#0x01
      000295 5F               [ 1]  509 	clrw	x
      000296 89               [ 2]  510 	pushw	x
      000297 90 89            [ 2]  511 	pushw	y
      000299 CDr00r00         [ 4]  512 	call	_assert_failed
      00029C 5B 06            [ 2]  513 	addw	sp, #6
      00029E                        514 00107$:
                                    515 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 276: FLASH->CR2 |= FLASH_CR2_OPT;
      00029E 72 1E 50 5B      [ 1]  516 	bset	0x505b, #7
                                    517 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 277: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NOPT);
      0002A2 AE 50 5C         [ 2]  518 	ldw	x, #0x505c
      0002A5 F6               [ 1]  519 	ld	a, (x)
      0002A6 A4 7F            [ 1]  520 	and	a, #0x7f
      0002A8 F7               [ 1]  521 	ld	(x), a
                                    522 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 283: *((NEAR uint8_t*)Address) = FLASH_CLEAR_BYTE;
      0002A9 16 03            [ 2]  523 	ldw	y, (0x03, sp)
                                    524 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 280: if(Address == 0x4800)
      0002AB 1E 03            [ 2]  525 	ldw	x, (0x03, sp)
      0002AD A3 48 00         [ 2]  526 	cpw	x, #0x4800
      0002B0 26 04            [ 1]  527 	jrne	00102$
                                    528 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 283: *((NEAR uint8_t*)Address) = FLASH_CLEAR_BYTE;
      0002B2 90 7F            [ 1]  529 	clr	(y)
      0002B4 20 08            [ 2]  530 	jra	00103$
      0002B6                        531 00102$:
                                    532 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 288: *((NEAR uint8_t*)Address) = FLASH_CLEAR_BYTE;
      0002B6 90 7F            [ 1]  533 	clr	(y)
                                    534 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 289: *((NEAR uint8_t*)((uint16_t)(Address + (uint16_t)1 ))) = FLASH_SET_BYTE;
      0002B8 1E 03            [ 2]  535 	ldw	x, (0x03, sp)
      0002BA 5C               [ 2]  536 	incw	x
      0002BB A6 FF            [ 1]  537 	ld	a, #0xff
      0002BD F7               [ 1]  538 	ld	(x), a
      0002BE                        539 00103$:
                                    540 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 291: FLASH_WaitForLastOperation(FLASH_MEMTYPE_PROG);
      0002BE 4B FD            [ 1]  541 	push	#0xfd
      0002C0 CDr04r01         [ 4]  542 	call	_FLASH_WaitForLastOperation
      0002C3 84               [ 1]  543 	pop	a
                                    544 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 294: FLASH->CR2 &= (uint8_t)(~FLASH_CR2_OPT);
      0002C4 72 1F 50 5B      [ 1]  545 	bres	0x505b, #7
                                    546 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 295: FLASH->NCR2 |= FLASH_NCR2_NOPT;
      0002C8 72 1E 50 5C      [ 1]  547 	bset	0x505c, #7
      0002CC 81               [ 4]  548 	ret
                                    549 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 303: uint16_t FLASH_ReadOptionByte(uint16_t Address)
                                    550 ;	-----------------------------------------
                                    551 ;	 function FLASH_ReadOptionByte
                                    552 ;	-----------------------------------------
      0002CD                        553 _FLASH_ReadOptionByte:
      0002CD 52 05            [ 2]  554 	sub	sp, #5
                                    555 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 309: assert_param(IS_OPTION_BYTE_ADDRESS_OK(Address));
      0002CF 1E 08            [ 2]  556 	ldw	x, (0x08, sp)
      0002D1 A3 48 00         [ 2]  557 	cpw	x, #0x4800
      0002D4 25 07            [ 1]  558 	jrc	00109$
      0002D6 1E 08            [ 2]  559 	ldw	x, (0x08, sp)
      0002D8 A3 48 7F         [ 2]  560 	cpw	x, #0x487f
      0002DB 23 11            [ 2]  561 	jrule	00110$
      0002DD                        562 00109$:
      0002DD 90 AEr05rA3      [ 2]  563 	ldw	y, #___str_0+0
      0002E1 4B 35            [ 1]  564 	push	#0x35
      0002E3 4B 01            [ 1]  565 	push	#0x01
      0002E5 5F               [ 1]  566 	clrw	x
      0002E6 89               [ 2]  567 	pushw	x
      0002E7 90 89            [ 2]  568 	pushw	y
      0002E9 CDr00r00         [ 4]  569 	call	_assert_failed
      0002EC 5B 06            [ 2]  570 	addw	sp, #6
      0002EE                        571 00110$:
                                    572 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 311: value_optbyte = *((NEAR uint8_t*)Address); /* Read option byte */
      0002EE 1E 08            [ 2]  573 	ldw	x, (0x08, sp)
      0002F0 F6               [ 1]  574 	ld	a, (x)
      0002F1 6B 01            [ 1]  575 	ld	(0x01, sp), a
                                    576 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 312: value_optbyte_complement = *(((NEAR uint8_t*)Address) + 1); /* Read option byte complement */
      0002F3 E6 01            [ 1]  577 	ld	a, (0x1, x)
      0002F5 6B 02            [ 1]  578 	ld	(0x02, sp), a
                                    579 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 317: res_value =	 value_optbyte;
      0002F7 5F               [ 1]  580 	clrw	x
      0002F8 7B 01            [ 1]  581 	ld	a, (0x01, sp)
      0002FA 97               [ 1]  582 	ld	xl, a
                                    583 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 315: if(Address == 0x4800)	 
      0002FB 89               [ 2]  584 	pushw	x
      0002FC 1E 0A            [ 2]  585 	ldw	x, (0x0a, sp)
      0002FE A3 48 00         [ 2]  586 	cpw	x, #0x4800
      000301 85               [ 2]  587 	popw	x
      000302 27 20            [ 1]  588 	jreq	00106$
                                    589 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 317: res_value =	 value_optbyte;
      000304 20 00            [ 2]  590 	jra	00105$
      000306                        591 00105$:
                                    592 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 321: if(value_optbyte == (uint8_t)(~value_optbyte_complement))
      000306 7B 02            [ 1]  593 	ld	a, (0x02, sp)
      000308 43               [ 1]  594 	cpl	a
      000309 6B 05            [ 1]  595 	ld	(0x05, sp), a
      00030B 7B 01            [ 1]  596 	ld	a, (0x01, sp)
      00030D 11 05            [ 1]  597 	cp	a, (0x05, sp)
      00030F 26 10            [ 1]  598 	jrne	00102$
                                    599 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 323: res_value = (uint16_t)((uint16_t)value_optbyte << 8);
      000311 4F               [ 1]  600 	clr	a
      000312 02               [ 1]  601 	rlwa	x
                                    602 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 324: res_value = res_value | (uint16_t)value_optbyte_complement;
      000313 7B 02            [ 1]  603 	ld	a, (0x02, sp)
      000315 0F 03            [ 1]  604 	clr	(0x03, sp)
      000317 89               [ 2]  605 	pushw	x
      000318 1A 02            [ 1]  606 	or	a, (2, sp)
      00031A 85               [ 2]  607 	popw	x
      00031B 02               [ 1]  608 	rlwa	x
      00031C 1A 03            [ 1]  609 	or	a, (0x03, sp)
      00031E 95               [ 1]  610 	ld	xh, a
      00031F 20 03            [ 2]  611 	jra	00106$
      000321                        612 00102$:
                                    613 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 328: res_value = FLASH_OPTIONBYTE_ERROR;
      000321 AE 55 55         [ 2]  614 	ldw	x, #0x5555
      000324                        615 00106$:
                                    616 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 331: return(res_value);
      000324 5B 05            [ 2]  617 	addw	sp, #5
      000326 81               [ 4]  618 	ret
                                    619 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 340: void FLASH_SetLowPowerMode(FLASH_LPMode_TypeDef FLASH_LPMode)
                                    620 ;	-----------------------------------------
                                    621 ;	 function FLASH_SetLowPowerMode
                                    622 ;	-----------------------------------------
      000327                        623 _FLASH_SetLowPowerMode:
                                    624 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 343: assert_param(IS_FLASH_LOW_POWER_MODE_OK(FLASH_LPMode));
      000327 7B 03            [ 1]  625 	ld	a, (0x03, sp)
      000329 A1 04            [ 1]  626 	cp	a, #0x04
      00032B 27 21            [ 1]  627 	jreq	00104$
      00032D 7B 03            [ 1]  628 	ld	a, (0x03, sp)
      00032F A1 08            [ 1]  629 	cp	a, #0x08
      000331 27 1B            [ 1]  630 	jreq	00104$
      000333 0D 03            [ 1]  631 	tnz	(0x03, sp)
      000335 27 17            [ 1]  632 	jreq	00104$
      000337 7B 03            [ 1]  633 	ld	a, (0x03, sp)
      000339 A1 0C            [ 1]  634 	cp	a, #0x0c
      00033B 27 11            [ 1]  635 	jreq	00104$
      00033D 90 AEr05rA3      [ 2]  636 	ldw	y, #___str_0+0
      000341 4B 57            [ 1]  637 	push	#0x57
      000343 4B 01            [ 1]  638 	push	#0x01
      000345 5F               [ 1]  639 	clrw	x
      000346 89               [ 2]  640 	pushw	x
      000347 90 89            [ 2]  641 	pushw	y
      000349 CDr00r00         [ 4]  642 	call	_assert_failed
      00034C 5B 06            [ 2]  643 	addw	sp, #6
      00034E                        644 00104$:
                                    645 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 346: FLASH->CR1 &= (uint8_t)(~(FLASH_CR1_HALT | FLASH_CR1_AHALT)); 
      00034E AE 50 5A         [ 2]  646 	ldw	x, #0x505a
      000351 F6               [ 1]  647 	ld	a, (x)
      000352 A4 F3            [ 1]  648 	and	a, #0xf3
      000354 F7               [ 1]  649 	ld	(x), a
                                    650 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 349: FLASH->CR1 |= (uint8_t)FLASH_LPMode; 
      000355 AE 50 5A         [ 2]  651 	ldw	x, #0x505a
      000358 F6               [ 1]  652 	ld	a, (x)
      000359 1A 03            [ 1]  653 	or	a, (0x03, sp)
      00035B AE 50 5A         [ 2]  654 	ldw	x, #0x505a
      00035E F7               [ 1]  655 	ld	(x), a
      00035F 81               [ 4]  656 	ret
                                    657 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 358: void FLASH_SetProgrammingTime(FLASH_ProgramTime_TypeDef FLASH_ProgTime)
                                    658 ;	-----------------------------------------
                                    659 ;	 function FLASH_SetProgrammingTime
                                    660 ;	-----------------------------------------
      000360                        661 _FLASH_SetProgrammingTime:
                                    662 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 361: assert_param(IS_FLASH_PROGRAM_TIME_OK(FLASH_ProgTime));
      000360 0D 03            [ 1]  663 	tnz	(0x03, sp)
      000362 27 17            [ 1]  664 	jreq	00104$
      000364 7B 03            [ 1]  665 	ld	a, (0x03, sp)
      000366 A1 01            [ 1]  666 	cp	a, #0x01
      000368 27 11            [ 1]  667 	jreq	00104$
      00036A 90 AEr05rA3      [ 2]  668 	ldw	y, #___str_0+0
      00036E 4B 69            [ 1]  669 	push	#0x69
      000370 4B 01            [ 1]  670 	push	#0x01
      000372 5F               [ 1]  671 	clrw	x
      000373 89               [ 2]  672 	pushw	x
      000374 90 89            [ 2]  673 	pushw	y
      000376 CDr00r00         [ 4]  674 	call	_assert_failed
      000379 5B 06            [ 2]  675 	addw	sp, #6
      00037B                        676 00104$:
                                    677 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 363: FLASH->CR1 &= (uint8_t)(~FLASH_CR1_FIX);
      00037B 72 11 50 5A      [ 1]  678 	bres	0x505a, #0
                                    679 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 364: FLASH->CR1 |= (uint8_t)FLASH_ProgTime;
      00037F AE 50 5A         [ 2]  680 	ldw	x, #0x505a
      000382 F6               [ 1]  681 	ld	a, (x)
      000383 1A 03            [ 1]  682 	or	a, (0x03, sp)
      000385 AE 50 5A         [ 2]  683 	ldw	x, #0x505a
      000388 F7               [ 1]  684 	ld	(x), a
      000389 81               [ 4]  685 	ret
                                    686 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 372: FLASH_LPMode_TypeDef FLASH_GetLowPowerMode(void)
                                    687 ;	-----------------------------------------
                                    688 ;	 function FLASH_GetLowPowerMode
                                    689 ;	-----------------------------------------
      00038A                        690 _FLASH_GetLowPowerMode:
                                    691 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 374: return((FLASH_LPMode_TypeDef)(FLASH->CR1 & (uint8_t)(FLASH_CR1_HALT | FLASH_CR1_AHALT)));
      00038A AE 50 5A         [ 2]  692 	ldw	x, #0x505a
      00038D F6               [ 1]  693 	ld	a, (x)
      00038E A4 0C            [ 1]  694 	and	a, #0x0c
      000390 81               [ 4]  695 	ret
                                    696 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 382: FLASH_ProgramTime_TypeDef FLASH_GetProgrammingTime(void)
                                    697 ;	-----------------------------------------
                                    698 ;	 function FLASH_GetProgrammingTime
                                    699 ;	-----------------------------------------
      000391                        700 _FLASH_GetProgrammingTime:
                                    701 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 384: return((FLASH_ProgramTime_TypeDef)(FLASH->CR1 & FLASH_CR1_FIX));
      000391 AE 50 5A         [ 2]  702 	ldw	x, #0x505a
      000394 F6               [ 1]  703 	ld	a, (x)
      000395 A4 01            [ 1]  704 	and	a, #0x01
      000397 81               [ 4]  705 	ret
                                    706 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 392: uint32_t FLASH_GetBootSize(void)
                                    707 ;	-----------------------------------------
                                    708 ;	 function FLASH_GetBootSize
                                    709 ;	-----------------------------------------
      000398                        710 _FLASH_GetBootSize:
      000398 52 04            [ 2]  711 	sub	sp, #4
                                    712 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 397: temp = (uint32_t)((uint32_t)FLASH->FPR * (uint32_t)512);
      00039A AE 50 5D         [ 2]  713 	ldw	x, #0x505d
      00039D F6               [ 1]  714 	ld	a, (x)
      00039E 5F               [ 1]  715 	clrw	x
      00039F 97               [ 1]  716 	ld	xl, a
      0003A0 90 5F            [ 1]  717 	clrw	y
      0003A2 A6 09            [ 1]  718 	ld	a, #0x09
      0003A4                        719 00109$:
      0003A4 58               [ 2]  720 	sllw	x
      0003A5 90 59            [ 2]  721 	rlcw	y
      0003A7 4A               [ 1]  722 	dec	a
      0003A8 26 FA            [ 1]  723 	jrne	00109$
      0003AA 1F 03            [ 2]  724 	ldw	(0x03, sp), x
                                    725 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 400: if(FLASH->FPR == 0xFF)
      0003AC AE 50 5D         [ 2]  726 	ldw	x, #0x505d
      0003AF F6               [ 1]  727 	ld	a, (x)
      0003B0 A1 FF            [ 1]  728 	cp	a, #0xff
      0003B2 26 11            [ 1]  729 	jrne	00102$
                                    730 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 402: temp += 512;
      0003B4 1E 03            [ 2]  731 	ldw	x, (0x03, sp)
      0003B6 1C 02 00         [ 2]  732 	addw	x, #0x0200
      0003B9 90 9F            [ 1]  733 	ld	a, yl
      0003BB A9 00            [ 1]  734 	adc	a, #0x00
      0003BD 90 02            [ 1]  735 	rlwa	y
      0003BF A9 00            [ 1]  736 	adc	a, #0x00
      0003C1 90 95            [ 1]  737 	ld	yh, a
      0003C3 1F 03            [ 2]  738 	ldw	(0x03, sp), x
      0003C5                        739 00102$:
                                    740 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 406: return(temp);
      0003C5 1E 03            [ 2]  741 	ldw	x, (0x03, sp)
      0003C7 5B 04            [ 2]  742 	addw	sp, #4
      0003C9 81               [ 4]  743 	ret
                                    744 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 417: FlagStatus FLASH_GetFlagStatus(FLASH_Flag_TypeDef FLASH_FLAG)
                                    745 ;	-----------------------------------------
                                    746 ;	 function FLASH_GetFlagStatus
                                    747 ;	-----------------------------------------
      0003CA                        748 _FLASH_GetFlagStatus:
                                    749 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 421: assert_param(IS_FLASH_FLAGS_OK(FLASH_FLAG));
      0003CA 7B 03            [ 1]  750 	ld	a, (0x03, sp)
      0003CC A1 08            [ 1]  751 	cp	a, #0x08
      0003CE 27 23            [ 1]  752 	jreq	00107$
      0003D0 7B 03            [ 1]  753 	ld	a, (0x03, sp)
      0003D2 A1 04            [ 1]  754 	cp	a, #0x04
      0003D4 27 1D            [ 1]  755 	jreq	00107$
      0003D6 7B 03            [ 1]  756 	ld	a, (0x03, sp)
      0003D8 A1 02            [ 1]  757 	cp	a, #0x02
      0003DA 27 17            [ 1]  758 	jreq	00107$
      0003DC 7B 03            [ 1]  759 	ld	a, (0x03, sp)
      0003DE A1 01            [ 1]  760 	cp	a, #0x01
      0003E0 27 11            [ 1]  761 	jreq	00107$
      0003E2 90 AEr05rA3      [ 2]  762 	ldw	y, #___str_0+0
      0003E6 4B A5            [ 1]  763 	push	#0xa5
      0003E8 4B 01            [ 1]  764 	push	#0x01
      0003EA 5F               [ 1]  765 	clrw	x
      0003EB 89               [ 2]  766 	pushw	x
      0003EC 90 89            [ 2]  767 	pushw	y
      0003EE CDr00r00         [ 4]  768 	call	_assert_failed
      0003F1 5B 06            [ 2]  769 	addw	sp, #6
      0003F3                        770 00107$:
                                    771 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 424: if((FLASH->IAPSR & (uint8_t)FLASH_FLAG) != (uint8_t)RESET)
      0003F3 AE 50 5F         [ 2]  772 	ldw	x, #0x505f
      0003F6 F6               [ 1]  773 	ld	a, (x)
      0003F7 14 03            [ 1]  774 	and	a, (0x03, sp)
      0003F9 4D               [ 1]  775 	tnz	a
      0003FA 27 03            [ 1]  776 	jreq	00102$
                                    777 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 426: status = SET; /* FLASH_FLAG is set */
      0003FC A6 01            [ 1]  778 	ld	a, #0x01
                                    779 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 430: status = RESET; /* FLASH_FLAG is reset*/
      0003FE 21                     780 	.byte 0x21
      0003FF                        781 00102$:
      0003FF 4F               [ 1]  782 	clr	a
      000400                        783 00103$:
                                    784 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 434: return status;
      000400 81               [ 4]  785 	ret
                                    786 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 549: IN_RAM(FLASH_Status_TypeDef FLASH_WaitForLastOperation(FLASH_MemType_TypeDef FLASH_MemType)) 
                                    787 ;	-----------------------------------------
                                    788 ;	 function FLASH_WaitForLastOperation
                                    789 ;	-----------------------------------------
      000401                        790 _FLASH_WaitForLastOperation:
                                    791 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 551: uint8_t flagstatus = 0x00;
      000401 4F               [ 1]  792 	clr	a
                                    793 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 576: while((flagstatus == 0x00) && (timeout != 0x00))
      000402 AE FF FF         [ 2]  794 	ldw	x, #0xffff
      000405                        795 00102$:
      000405 4D               [ 1]  796 	tnz	a
      000406 26 0E            [ 1]  797 	jrne	00104$
      000408 5D               [ 2]  798 	tnzw	x
      000409 27 0B            [ 1]  799 	jreq	00104$
                                    800 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 578: flagstatus = (uint8_t)(FLASH->IAPSR & (FLASH_IAPSR_EOP | FLASH_IAPSR_WR_PG_DIS));
      00040B 90 AE 50 5F      [ 2]  801 	ldw	y, #0x505f
      00040F 90 F6            [ 1]  802 	ld	a, (y)
      000411 A4 05            [ 1]  803 	and	a, #0x05
                                    804 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 579: timeout--;
      000413 5A               [ 2]  805 	decw	x
      000414 20 EF            [ 2]  806 	jra	00102$
      000416                        807 00104$:
                                    808 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 583: if(timeout == 0x00 )
      000416 5D               [ 2]  809 	tnzw	x
      000417 26 02            [ 1]  810 	jrne	00106$
                                    811 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 585: flagstatus = FLASH_STATUS_TIMEOUT;
      000419 A6 02            [ 1]  812 	ld	a, #0x02
      00041B                        813 00106$:
                                    814 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 588: return((FLASH_Status_TypeDef)flagstatus);
      00041B 81               [ 4]  815 	ret
                                    816 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 598: IN_RAM(void FLASH_EraseBlock(uint16_t BlockNum, FLASH_MemType_TypeDef FLASH_MemType))
                                    817 ;	-----------------------------------------
                                    818 ;	 function FLASH_EraseBlock
                                    819 ;	-----------------------------------------
      00041C                        820 _FLASH_EraseBlock:
      00041C 52 07            [ 2]  821 	sub	sp, #7
                                    822 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 610: assert_param(IS_MEMORY_TYPE_OK(FLASH_MemType));
      00041E 7B 0C            [ 1]  823 	ld	a, (0x0c, sp)
      000420 A1 FD            [ 1]  824 	cp	a, #0xfd
      000422 26 06            [ 1]  825 	jrne	00136$
      000424 A6 01            [ 1]  826 	ld	a, #0x01
      000426 6B 07            [ 1]  827 	ld	(0x07, sp), a
      000428 20 02            [ 2]  828 	jra	00137$
      00042A                        829 00136$:
      00042A 0F 07            [ 1]  830 	clr	(0x07, sp)
      00042C                        831 00137$:
      00042C 0D 07            [ 1]  832 	tnz	(0x07, sp)
      00042E 26 17            [ 1]  833 	jrne	00107$
      000430 7B 0C            [ 1]  834 	ld	a, (0x0c, sp)
      000432 A1 F7            [ 1]  835 	cp	a, #0xf7
      000434 27 11            [ 1]  836 	jreq	00107$
      000436 90 AEr05rA3      [ 2]  837 	ldw	y, #___str_0+0
      00043A 4B 62            [ 1]  838 	push	#0x62
      00043C 4B 02            [ 1]  839 	push	#0x02
      00043E 5F               [ 1]  840 	clrw	x
      00043F 89               [ 2]  841 	pushw	x
      000440 90 89            [ 2]  842 	pushw	y
      000442 CDr00r00         [ 4]  843 	call	_assert_failed
      000445 5B 06            [ 2]  844 	addw	sp, #6
      000447                        845 00107$:
                                    846 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 611: if(FLASH_MemType == FLASH_MEMTYPE_PROG)
      000447 0D 07            [ 1]  847 	tnz	(0x07, sp)
      000449 27 22            [ 1]  848 	jreq	00102$
                                    849 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 613: assert_param(IS_FLASH_PROG_BLOCK_NUMBER_OK(BlockNum));
      00044B 1E 0A            [ 2]  850 	ldw	x, (0x0a, sp)
      00044D A3 00 80         [ 2]  851 	cpw	x, #0x0080
      000450 25 11            [ 1]  852 	jrc	00112$
      000452 90 AEr05rA3      [ 2]  853 	ldw	y, #___str_0+0
      000456 4B 65            [ 1]  854 	push	#0x65
      000458 4B 02            [ 1]  855 	push	#0x02
      00045A 5F               [ 1]  856 	clrw	x
      00045B 89               [ 2]  857 	pushw	x
      00045C 90 89            [ 2]  858 	pushw	y
      00045E CDr00r00         [ 4]  859 	call	_assert_failed
      000461 5B 06            [ 2]  860 	addw	sp, #6
      000463                        861 00112$:
                                    862 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 614: startaddress = FLASH_PROG_START_PHYSICAL_ADDRESS;
      000463 AE 80 00         [ 2]  863 	ldw	x, #0x8000
      000466 1F 05            [ 2]  864 	ldw	(0x05, sp), x
      000468 5F               [ 1]  865 	clrw	x
      000469 1F 03            [ 2]  866 	ldw	(0x03, sp), x
      00046B 20 20            [ 2]  867 	jra	00103$
      00046D                        868 00102$:
                                    869 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 618: assert_param(IS_FLASH_DATA_BLOCK_NUMBER_OK(BlockNum));
      00046D 1E 0A            [ 2]  870 	ldw	x, (0x0a, sp)
      00046F A3 00 0A         [ 2]  871 	cpw	x, #0x000a
      000472 25 11            [ 1]  872 	jrc	00114$
      000474 90 AEr05rA3      [ 2]  873 	ldw	y, #___str_0+0
      000478 4B 6A            [ 1]  874 	push	#0x6a
      00047A 4B 02            [ 1]  875 	push	#0x02
      00047C 5F               [ 1]  876 	clrw	x
      00047D 89               [ 2]  877 	pushw	x
      00047E 90 89            [ 2]  878 	pushw	y
      000480 CDr00r00         [ 4]  879 	call	_assert_failed
      000483 5B 06            [ 2]  880 	addw	sp, #6
      000485                        881 00114$:
                                    882 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 619: startaddress = FLASH_DATA_START_PHYSICAL_ADDRESS;
      000485 AE 40 00         [ 2]  883 	ldw	x, #0x4000
      000488 1F 05            [ 2]  884 	ldw	(0x05, sp), x
      00048A 5F               [ 1]  885 	clrw	x
      00048B 1F 03            [ 2]  886 	ldw	(0x03, sp), x
      00048D                        887 00103$:
                                    888 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 627: pwFlash = (PointerAttr uint32_t *)(MemoryAddressCast)(startaddress + ((uint32_t)BlockNum * FLASH_BLOCK_SIZE));
      00048D 16 0A            [ 2]  889 	ldw	y, (0x0a, sp)
      00048F 5F               [ 1]  890 	clrw	x
      000490 A6 06            [ 1]  891 	ld	a, #0x06
      000492                        892 00145$:
      000492 90 58            [ 2]  893 	sllw	y
      000494 59               [ 2]  894 	rlcw	x
      000495 4A               [ 1]  895 	dec	a
      000496 26 FA            [ 1]  896 	jrne	00145$
      000498 72 F9 05         [ 2]  897 	addw	y, (0x05, sp)
      00049B 9F               [ 1]  898 	ld	a, xl
      00049C 19 04            [ 1]  899 	adc	a, (0x04, sp)
      00049E 02               [ 1]  900 	rlwa	x
      00049F 19 03            [ 1]  901 	adc	a, (0x03, sp)
      0004A1 17 01            [ 2]  902 	ldw	(0x01, sp), y
                                    903 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 631: FLASH->CR2 |= FLASH_CR2_ERASE;
      0004A3 AE 50 5B         [ 2]  904 	ldw	x, #0x505b
      0004A6 F6               [ 1]  905 	ld	a, (x)
      0004A7 AA 20            [ 1]  906 	or	a, #0x20
      0004A9 F7               [ 1]  907 	ld	(x), a
                                    908 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 632: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NERASE);
      0004AA AE 50 5C         [ 2]  909 	ldw	x, #0x505c
      0004AD F6               [ 1]  910 	ld	a, (x)
      0004AE A4 DF            [ 1]  911 	and	a, #0xdf
      0004B0 F7               [ 1]  912 	ld	(x), a
                                    913 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 636: *pwFlash = (uint32_t)0;
      0004B1 1E 01            [ 2]  914 	ldw	x, (0x01, sp)
      0004B3 90 5F            [ 1]  915 	clrw	y
      0004B5 EF 02            [ 2]  916 	ldw	(0x2, x), y
      0004B7 FF               [ 2]  917 	ldw	(x), y
      0004B8 5B 07            [ 2]  918 	addw	sp, #7
      0004BA 81               [ 4]  919 	ret
                                    920 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 655: IN_RAM(void FLASH_ProgramBlock(uint16_t BlockNum, FLASH_MemType_TypeDef FLASH_MemType, 
                                    921 ;	-----------------------------------------
                                    922 ;	 function FLASH_ProgramBlock
                                    923 ;	-----------------------------------------
      0004BB                        924 _FLASH_ProgramBlock:
      0004BB 52 0F            [ 2]  925 	sub	sp, #15
                                    926 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 662: assert_param(IS_MEMORY_TYPE_OK(FLASH_MemType));
      0004BD 7B 14            [ 1]  927 	ld	a, (0x14, sp)
      0004BF A1 FD            [ 1]  928 	cp	a, #0xfd
      0004C1 26 06            [ 1]  929 	jrne	00164$
      0004C3 A6 01            [ 1]  930 	ld	a, #0x01
      0004C5 6B 0F            [ 1]  931 	ld	(0x0f, sp), a
      0004C7 20 02            [ 2]  932 	jra	00165$
      0004C9                        933 00164$:
      0004C9 0F 0F            [ 1]  934 	clr	(0x0f, sp)
      0004CB                        935 00165$:
      0004CB 0D 0F            [ 1]  936 	tnz	(0x0f, sp)
      0004CD 26 17            [ 1]  937 	jrne	00113$
      0004CF 7B 14            [ 1]  938 	ld	a, (0x14, sp)
      0004D1 A1 F7            [ 1]  939 	cp	a, #0xf7
      0004D3 27 11            [ 1]  940 	jreq	00113$
      0004D5 90 AEr05rA3      [ 2]  941 	ldw	y, #___str_0+0
      0004D9 4B 96            [ 1]  942 	push	#0x96
      0004DB 4B 02            [ 1]  943 	push	#0x02
      0004DD 5F               [ 1]  944 	clrw	x
      0004DE 89               [ 2]  945 	pushw	x
      0004DF 90 89            [ 2]  946 	pushw	y
      0004E1 CDr00r00         [ 4]  947 	call	_assert_failed
      0004E4 5B 06            [ 2]  948 	addw	sp, #6
      0004E6                        949 00113$:
                                    950 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 663: assert_param(IS_FLASH_PROGRAM_MODE_OK(FLASH_ProgMode));
      0004E6 0D 15            [ 1]  951 	tnz	(0x15, sp)
      0004E8 27 17            [ 1]  952 	jreq	00118$
      0004EA 7B 15            [ 1]  953 	ld	a, (0x15, sp)
      0004EC A1 10            [ 1]  954 	cp	a, #0x10
      0004EE 27 11            [ 1]  955 	jreq	00118$
      0004F0 90 AEr05rA3      [ 2]  956 	ldw	y, #___str_0+0
      0004F4 4B 97            [ 1]  957 	push	#0x97
      0004F6 4B 02            [ 1]  958 	push	#0x02
      0004F8 5F               [ 1]  959 	clrw	x
      0004F9 89               [ 2]  960 	pushw	x
      0004FA 90 89            [ 2]  961 	pushw	y
      0004FC CDr00r00         [ 4]  962 	call	_assert_failed
      0004FF 5B 06            [ 2]  963 	addw	sp, #6
      000501                        964 00118$:
                                    965 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 664: if(FLASH_MemType == FLASH_MEMTYPE_PROG)
      000501 0D 0F            [ 1]  966 	tnz	(0x0f, sp)
      000503 27 22            [ 1]  967 	jreq	00102$
                                    968 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 666: assert_param(IS_FLASH_PROG_BLOCK_NUMBER_OK(BlockNum));
      000505 1E 12            [ 2]  969 	ldw	x, (0x12, sp)
      000507 A3 00 80         [ 2]  970 	cpw	x, #0x0080
      00050A 25 11            [ 1]  971 	jrc	00123$
      00050C 90 AEr05rA3      [ 2]  972 	ldw	y, #___str_0+0
      000510 4B 9A            [ 1]  973 	push	#0x9a
      000512 4B 02            [ 1]  974 	push	#0x02
      000514 5F               [ 1]  975 	clrw	x
      000515 89               [ 2]  976 	pushw	x
      000516 90 89            [ 2]  977 	pushw	y
      000518 CDr00r00         [ 4]  978 	call	_assert_failed
      00051B 5B 06            [ 2]  979 	addw	sp, #6
      00051D                        980 00123$:
                                    981 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 667: startaddress = FLASH_PROG_START_PHYSICAL_ADDRESS;
      00051D AE 80 00         [ 2]  982 	ldw	x, #0x8000
      000520 1F 09            [ 2]  983 	ldw	(0x09, sp), x
      000522 4F               [ 1]  984 	clr	a
      000523 0F 07            [ 1]  985 	clr	(0x07, sp)
      000525 20 20            [ 2]  986 	jra	00103$
      000527                        987 00102$:
                                    988 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 671: assert_param(IS_FLASH_DATA_BLOCK_NUMBER_OK(BlockNum));
      000527 1E 12            [ 2]  989 	ldw	x, (0x12, sp)
      000529 A3 00 0A         [ 2]  990 	cpw	x, #0x000a
      00052C 25 11            [ 1]  991 	jrc	00125$
      00052E 90 AEr05rA3      [ 2]  992 	ldw	y, #___str_0+0
      000532 4B 9F            [ 1]  993 	push	#0x9f
      000534 4B 02            [ 1]  994 	push	#0x02
      000536 5F               [ 1]  995 	clrw	x
      000537 89               [ 2]  996 	pushw	x
      000538 90 89            [ 2]  997 	pushw	y
      00053A CDr00r00         [ 4]  998 	call	_assert_failed
      00053D 5B 06            [ 2]  999 	addw	sp, #6
      00053F                       1000 00125$:
                                   1001 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 672: startaddress = FLASH_DATA_START_PHYSICAL_ADDRESS;
      00053F AE 40 00         [ 2] 1002 	ldw	x, #0x4000
      000542 1F 09            [ 2] 1003 	ldw	(0x09, sp), x
      000544 4F               [ 1] 1004 	clr	a
      000545 0F 07            [ 1] 1005 	clr	(0x07, sp)
      000547                       1006 00103$:
                                   1007 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 676: startaddress = startaddress + ((uint32_t)BlockNum * FLASH_BLOCK_SIZE);
      000547 16 12            [ 2] 1008 	ldw	y, (0x12, sp)
      000549 5F               [ 1] 1009 	clrw	x
      00054A 88               [ 1] 1010 	push	a
      00054B A6 06            [ 1] 1011 	ld	a, #0x06
      00054D                       1012 00177$:
      00054D 90 58            [ 2] 1013 	sllw	y
      00054F 59               [ 2] 1014 	rlcw	x
      000550 4A               [ 1] 1015 	dec	a
      000551 26 FA            [ 1] 1016 	jrne	00177$
      000553 1F 0C            [ 2] 1017 	ldw	(0x0c, sp), x
      000555 84               [ 1] 1018 	pop	a
      000556 72 F9 09         [ 2] 1019 	addw	y, (0x09, sp)
      000559 19 0C            [ 1] 1020 	adc	a, (0x0c, sp)
      00055B 97               [ 1] 1021 	ld	xl, a
      00055C 7B 07            [ 1] 1022 	ld	a, (0x07, sp)
      00055E 19 0B            [ 1] 1023 	adc	a, (0x0b, sp)
      000560 95               [ 1] 1024 	ld	xh, a
      000561 17 05            [ 2] 1025 	ldw	(0x05, sp), y
      000563 1F 03            [ 2] 1026 	ldw	(0x03, sp), x
                                   1027 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 679: if(FLASH_ProgMode == FLASH_PROGRAMMODE_STANDARD)
      000565 0D 15            [ 1] 1028 	tnz	(0x15, sp)
      000567 26 0D            [ 1] 1029 	jrne	00105$
                                   1030 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 682: FLASH->CR2 |= FLASH_CR2_PRG;
      000569 72 10 50 5B      [ 1] 1031 	bset	0x505b, #0
                                   1032 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 683: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NPRG);
      00056D AE 50 5C         [ 2] 1033 	ldw	x, #0x505c
      000570 F6               [ 1] 1034 	ld	a, (x)
      000571 A4 FE            [ 1] 1035 	and	a, #0xfe
      000573 F7               [ 1] 1036 	ld	(x), a
      000574 20 0E            [ 2] 1037 	jra	00134$
      000576                       1038 00105$:
                                   1039 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 688: FLASH->CR2 |= FLASH_CR2_FPRG;
      000576 AE 50 5B         [ 2] 1040 	ldw	x, #0x505b
      000579 F6               [ 1] 1041 	ld	a, (x)
      00057A AA 10            [ 1] 1042 	or	a, #0x10
      00057C F7               [ 1] 1043 	ld	(x), a
                                   1044 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 689: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NFPRG);
      00057D AE 50 5C         [ 2] 1045 	ldw	x, #0x505c
      000580 F6               [ 1] 1046 	ld	a, (x)
      000581 A4 EF            [ 1] 1047 	and	a, #0xef
      000583 F7               [ 1] 1048 	ld	(x), a
                                   1049 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 693: for(Count = 0; Count < FLASH_BLOCK_SIZE; Count++)
      000584                       1050 00134$:
      000584 5F               [ 1] 1051 	clrw	x
      000585 1F 01            [ 2] 1052 	ldw	(0x01, sp), x
      000587                       1053 00108$:
                                   1054 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 695: *((PointerAttr uint8_t*) (MemoryAddressCast)startaddress + Count) = ((uint8_t)(Buffer[Count]));
      000587 16 05            [ 2] 1055 	ldw	y, (0x05, sp)
      000589 72 F9 01         [ 2] 1056 	addw	y, (0x01, sp)
      00058C 1E 16            [ 2] 1057 	ldw	x, (0x16, sp)
      00058E 72 FB 01         [ 2] 1058 	addw	x, (0x01, sp)
      000591 F6               [ 1] 1059 	ld	a, (x)
      000592 90 F7            [ 1] 1060 	ld	(y), a
                                   1061 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_flash.c: 693: for(Count = 0; Count < FLASH_BLOCK_SIZE; Count++)
      000594 1E 01            [ 2] 1062 	ldw	x, (0x01, sp)
      000596 5C               [ 2] 1063 	incw	x
      000597 1F 01            [ 2] 1064 	ldw	(0x01, sp), x
      000599 1E 01            [ 2] 1065 	ldw	x, (0x01, sp)
      00059B A3 00 40         [ 2] 1066 	cpw	x, #0x0040
      00059E 25 E7            [ 1] 1067 	jrc	00108$
      0005A0 5B 0F            [ 2] 1068 	addw	sp, #15
      0005A2 81               [ 4] 1069 	ret
                                   1070 	.area CODE
      0005A3                       1071 ___str_0:
      0005A3 2F 68 6F 6D 65 2F 67  1072 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      0005DF 65 72 2F 73 72 63 2F  1073 	.ascii "er/src/stm8s_flash.c"
             73 74 6D 38 73 5F 66
             6C 61 73 68 2E 63
      0005F3 00                    1074 	.db 0x00
                                   1075 	.area INITIALIZER
                                   1076 	.area CABS (ABS)
