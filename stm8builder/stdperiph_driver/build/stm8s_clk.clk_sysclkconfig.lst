                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:27:56 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_clk_clk_sysclkconfig
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _CLK_SYSCLKConfig
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 53: void CLK_SYSCLKConfig(CLK_Prescaler_TypeDef CLK_Prescaler)
                                     43 ;	-----------------------------------------
                                     44 ;	 function CLK_SYSCLKConfig
                                     45 ;	-----------------------------------------
      000000                         46 _CLK_SYSCLKConfig:
      000000 89               [ 2]   47 	pushw	x
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 56: assert_param(IS_CLK_PRESCALER_OK(CLK_Prescaler));
      000001 0D 05            [ 1]   49 	tnz	(0x05, sp)
      000003 27 53            [ 1]   50 	jreq	00107$
      000005 7B 05            [ 1]   51 	ld	a, (0x05, sp)
      000007 A1 08            [ 1]   52 	cp	a, #0x08
      000009 27 4D            [ 1]   53 	jreq	00107$
      00000B 7B 05            [ 1]   54 	ld	a, (0x05, sp)
      00000D A1 10            [ 1]   55 	cp	a, #0x10
      00000F 27 47            [ 1]   56 	jreq	00107$
      000011 7B 05            [ 1]   57 	ld	a, (0x05, sp)
      000013 A1 18            [ 1]   58 	cp	a, #0x18
      000015 27 41            [ 1]   59 	jreq	00107$
      000017 7B 05            [ 1]   60 	ld	a, (0x05, sp)
      000019 A1 80            [ 1]   61 	cp	a, #0x80
      00001B 27 3B            [ 1]   62 	jreq	00107$
      00001D 7B 05            [ 1]   63 	ld	a, (0x05, sp)
      00001F A1 81            [ 1]   64 	cp	a, #0x81
      000021 27 35            [ 1]   65 	jreq	00107$
      000023 7B 05            [ 1]   66 	ld	a, (0x05, sp)
      000025 A1 82            [ 1]   67 	cp	a, #0x82
      000027 27 2F            [ 1]   68 	jreq	00107$
      000029 7B 05            [ 1]   69 	ld	a, (0x05, sp)
      00002B A1 83            [ 1]   70 	cp	a, #0x83
      00002D 27 29            [ 1]   71 	jreq	00107$
      00002F 7B 05            [ 1]   72 	ld	a, (0x05, sp)
      000031 A1 84            [ 1]   73 	cp	a, #0x84
      000033 27 23            [ 1]   74 	jreq	00107$
      000035 7B 05            [ 1]   75 	ld	a, (0x05, sp)
      000037 A1 85            [ 1]   76 	cp	a, #0x85
      000039 27 1D            [ 1]   77 	jreq	00107$
      00003B 7B 05            [ 1]   78 	ld	a, (0x05, sp)
      00003D A1 86            [ 1]   79 	cp	a, #0x86
      00003F 27 17            [ 1]   80 	jreq	00107$
      000041 7B 05            [ 1]   81 	ld	a, (0x05, sp)
      000043 A1 87            [ 1]   82 	cp	a, #0x87
      000045 27 11            [ 1]   83 	jreq	00107$
      000047 90 AEr00r8E      [ 2]   84 	ldw	y, #___str_0+0
      00004B 4B 38            [ 1]   85 	push	#0x38
      00004D 5F               [ 1]   86 	clrw	x
      00004E 89               [ 2]   87 	pushw	x
      00004F 4B 00            [ 1]   88 	push	#0x00
      000051 90 89            [ 2]   89 	pushw	y
      000053 CDr00r00         [ 4]   90 	call	_assert_failed
      000056 5B 06            [ 2]   91 	addw	sp, #6
      000058                         92 00107$:
                                     93 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 58: if (((uint8_t)CLK_Prescaler & (uint8_t)0x80) == 0x00) /* Bit7 = 0 means HSI divider */
      000058 0D 05            [ 1]   94 	tnz	(0x05, sp)
      00005A 2B 19            [ 1]   95 	jrmi	00102$
                                     96 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 60: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      00005C AE 50 C6         [ 2]   97 	ldw	x, #0x50c6
      00005F F6               [ 1]   98 	ld	a, (x)
      000060 A4 E7            [ 1]   99 	and	a, #0xe7
      000062 F7               [ 1]  100 	ld	(x), a
                                    101 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 61: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_HSIDIV);
      000063 AE 50 C6         [ 2]  102 	ldw	x, #0x50c6
      000066 F6               [ 1]  103 	ld	a, (x)
      000067 6B 02            [ 1]  104 	ld	(0x02, sp), a
      000069 7B 05            [ 1]  105 	ld	a, (0x05, sp)
      00006B A4 18            [ 1]  106 	and	a, #0x18
      00006D 1A 02            [ 1]  107 	or	a, (0x02, sp)
      00006F AE 50 C6         [ 2]  108 	ldw	x, #0x50c6
      000072 F7               [ 1]  109 	ld	(x), a
      000073 20 17            [ 2]  110 	jra	00104$
      000075                        111 00102$:
                                    112 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 65: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_CPUDIV);
      000075 AE 50 C6         [ 2]  113 	ldw	x, #0x50c6
      000078 F6               [ 1]  114 	ld	a, (x)
      000079 A4 F8            [ 1]  115 	and	a, #0xf8
      00007B F7               [ 1]  116 	ld	(x), a
                                    117 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_sysclkconfig.c: 66: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_CPUDIV);
      00007C AE 50 C6         [ 2]  118 	ldw	x, #0x50c6
      00007F F6               [ 1]  119 	ld	a, (x)
      000080 6B 01            [ 1]  120 	ld	(0x01, sp), a
      000082 7B 05            [ 1]  121 	ld	a, (0x05, sp)
      000084 A4 07            [ 1]  122 	and	a, #0x07
      000086 1A 01            [ 1]  123 	or	a, (0x01, sp)
      000088 AE 50 C6         [ 2]  124 	ldw	x, #0x50c6
      00008B F7               [ 1]  125 	ld	(x), a
      00008C                        126 00104$:
      00008C 85               [ 2]  127 	popw	x
      00008D 81               [ 4]  128 	ret
                                    129 	.area CODE
      00008E                        130 ___str_0:
      00008E 2F 68 6F 6D 65 2F 67   131 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      0000CA 65 72 2F 73 72 63 2F   132 	.ascii "er/src/stm8s_clk.clk_sysclkconfig.c"
             73 74 6D 38 73 5F 63
             6C 6B 2E 63 6C 6B 5F
             73 79 73 63 6C 6B 63
             6F 6E 66 69 67 2E 63
      0000ED 00                     133 	.db 0x00
                                    134 	.area INITIALIZER
                                    135 	.area CABS (ABS)
