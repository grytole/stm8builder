                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:01 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_i2c_i2c_getflagstatus
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _I2C_GetFlagStatus
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 152: FlagStatus I2C_GetFlagStatus(I2C_Flag_TypeDef I2C_Flag)
                                     43 ;	-----------------------------------------
                                     44 ;	 function I2C_GetFlagStatus
                                     45 ;	-----------------------------------------
      000000                         46 _I2C_GetFlagStatus:
      000000 52 03            [ 2]   47 	sub	sp, #3
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 154: uint8_t tempreg = 0;
      000002 0F 03            [ 1]   49 	clr	(0x03, sp)
                                     50 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 159: assert_param(IS_I2C_FLAG_OK(I2C_Flag));
      000004 1E 06            [ 2]   51 	ldw	x, (0x06, sp)
      000006 A3 01 80         [ 2]   52 	cpw	x, #0x0180
      000009 27 7A            [ 1]   53 	jreq	00112$
      00000B 1E 06            [ 2]   54 	ldw	x, (0x06, sp)
      00000D A3 01 40         [ 2]   55 	cpw	x, #0x0140
      000010 27 73            [ 1]   56 	jreq	00112$
      000012 1E 06            [ 2]   57 	ldw	x, (0x06, sp)
      000014 A3 01 10         [ 2]   58 	cpw	x, #0x0110
      000017 27 6C            [ 1]   59 	jreq	00112$
      000019 1E 06            [ 2]   60 	ldw	x, (0x06, sp)
      00001B A3 01 08         [ 2]   61 	cpw	x, #0x0108
      00001E 27 65            [ 1]   62 	jreq	00112$
      000020 1E 06            [ 2]   63 	ldw	x, (0x06, sp)
      000022 A3 01 04         [ 2]   64 	cpw	x, #0x0104
      000025 27 5E            [ 1]   65 	jreq	00112$
      000027 1E 06            [ 2]   66 	ldw	x, (0x06, sp)
      000029 A3 01 02         [ 2]   67 	cpw	x, #0x0102
      00002C 27 57            [ 1]   68 	jreq	00112$
      00002E 1E 06            [ 2]   69 	ldw	x, (0x06, sp)
      000030 A3 01 01         [ 2]   70 	cpw	x, #0x0101
      000033 27 50            [ 1]   71 	jreq	00112$
      000035 1E 06            [ 2]   72 	ldw	x, (0x06, sp)
      000037 A3 02 20         [ 2]   73 	cpw	x, #0x0220
      00003A 27 49            [ 1]   74 	jreq	00112$
      00003C 1E 06            [ 2]   75 	ldw	x, (0x06, sp)
      00003E A3 02 08         [ 2]   76 	cpw	x, #0x0208
      000041 27 42            [ 1]   77 	jreq	00112$
      000043 1E 06            [ 2]   78 	ldw	x, (0x06, sp)
      000045 A3 02 04         [ 2]   79 	cpw	x, #0x0204
      000048 27 3B            [ 1]   80 	jreq	00112$
      00004A 1E 06            [ 2]   81 	ldw	x, (0x06, sp)
      00004C A3 02 02         [ 2]   82 	cpw	x, #0x0202
      00004F 27 34            [ 1]   83 	jreq	00112$
      000051 1E 06            [ 2]   84 	ldw	x, (0x06, sp)
      000053 A3 02 01         [ 2]   85 	cpw	x, #0x0201
      000056 27 2D            [ 1]   86 	jreq	00112$
      000058 1E 06            [ 2]   87 	ldw	x, (0x06, sp)
      00005A A3 03 10         [ 2]   88 	cpw	x, #0x0310
      00005D 27 26            [ 1]   89 	jreq	00112$
      00005F 1E 06            [ 2]   90 	ldw	x, (0x06, sp)
      000061 A3 03 04         [ 2]   91 	cpw	x, #0x0304
      000064 27 1F            [ 1]   92 	jreq	00112$
      000066 1E 06            [ 2]   93 	ldw	x, (0x06, sp)
      000068 A3 03 02         [ 2]   94 	cpw	x, #0x0302
      00006B 27 18            [ 1]   95 	jreq	00112$
      00006D 1E 06            [ 2]   96 	ldw	x, (0x06, sp)
      00006F A3 03 01         [ 2]   97 	cpw	x, #0x0301
      000072 27 11            [ 1]   98 	jreq	00112$
      000074 90 AEr00rBB      [ 2]   99 	ldw	y, #___str_0+0
      000078 4B 9F            [ 1]  100 	push	#0x9f
      00007A 5F               [ 1]  101 	clrw	x
      00007B 89               [ 2]  102 	pushw	x
      00007C 4B 00            [ 1]  103 	push	#0x00
      00007E 90 89            [ 2]  104 	pushw	y
      000080 CDr00r00         [ 4]  105 	call	_assert_failed
      000083 5B 06            [ 2]  106 	addw	sp, #6
      000085                        107 00112$:
                                    108 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 162: regindex = (uint8_t)((uint16_t)I2C_Flag >> 8);
      000085 7B 06            [ 1]  109 	ld	a, (0x06, sp)
      000087 0F 01            [ 1]  110 	clr	(0x01, sp)
                                    111 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 164: switch (regindex)
      000089 A1 01            [ 1]  112 	cp	a, #0x01
      00008B 27 0A            [ 1]  113 	jreq	00101$
      00008D A1 02            [ 1]  114 	cp	a, #0x02
      00008F 27 0E            [ 1]  115 	jreq	00102$
      000091 A1 03            [ 1]  116 	cp	a, #0x03
      000093 27 12            [ 1]  117 	jreq	00103$
      000095 20 16            [ 2]  118 	jra	00105$
                                    119 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 167: case 0x01:
      000097                        120 00101$:
                                    121 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 168: tempreg = (uint8_t)I2C->SR1;
      000097 AE 52 17         [ 2]  122 	ldw	x, #0x5217
      00009A F6               [ 1]  123 	ld	a, (x)
      00009B 6B 03            [ 1]  124 	ld	(0x03, sp), a
                                    125 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 169: break;
      00009D 20 0E            [ 2]  126 	jra	00105$
                                    127 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 172: case 0x02:
      00009F                        128 00102$:
                                    129 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 173: tempreg = (uint8_t)I2C->SR2;
      00009F AE 52 18         [ 2]  130 	ldw	x, #0x5218
      0000A2 F6               [ 1]  131 	ld	a, (x)
      0000A3 6B 03            [ 1]  132 	ld	(0x03, sp), a
                                    133 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 174: break;
      0000A5 20 06            [ 2]  134 	jra	00105$
                                    135 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 177: case 0x03:
      0000A7                        136 00103$:
                                    137 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 178: tempreg = (uint8_t)I2C->SR3;
      0000A7 AE 52 19         [ 2]  138 	ldw	x, #0x5219
      0000AA F6               [ 1]  139 	ld	a, (x)
      0000AB 6B 03            [ 1]  140 	ld	(0x03, sp), a
                                    141 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 183: }
      0000AD                        142 00105$:
                                    143 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 186: if ((tempreg & (uint8_t)I2C_Flag ) != 0)
      0000AD 7B 07            [ 1]  144 	ld	a, (0x07, sp)
      0000AF 14 03            [ 1]  145 	and	a, (0x03, sp)
      0000B1 4D               [ 1]  146 	tnz	a
      0000B2 27 03            [ 1]  147 	jreq	00107$
                                    148 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 189: bitstatus = SET;
      0000B4 A6 01            [ 1]  149 	ld	a, #0x01
                                    150 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 194: bitstatus = RESET;
      0000B6 21                     151 	.byte 0x21
      0000B7                        152 00107$:
      0000B7 4F               [ 1]  153 	clr	a
      0000B8                        154 00108$:
                                    155 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getflagstatus.c: 197: return bitstatus;
      0000B8 5B 03            [ 2]  156 	addw	sp, #3
      0000BA 81               [ 4]  157 	ret
                                    158 	.area CODE
      0000BB                        159 ___str_0:
      0000BB 2F 68 6F 6D 65 2F 67   160 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      0000F7 65 72 2F 73 72 63 2F   161 	.ascii "er/src/stm8s_i2c.i2c_getflagstatus.c"
             73 74 6D 38 73 5F 69
             32 63 2E 69 32 63 5F
             67 65 74 66 6C 61 67
             73 74 61 74 75 73 2E
             63
      00011B 00                     162 	.db 0x00
                                    163 	.area INITIALIZER
                                    164 	.area CABS (ABS)
