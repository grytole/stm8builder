                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:11 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_adc1_adc1_getitstatus
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _ADC1_GetITStatus
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 65: ITStatus ADC1_GetITStatus(ADC1_IT_TypeDef ITPendingBit)
                                     43 ;	-----------------------------------------
                                     44 ;	 function ADC1_GetITStatus
                                     45 ;	-----------------------------------------
      000000                         46 _ADC1_GetITStatus:
      000000 52 03            [ 2]   47 	sub	sp, #3
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 71: assert_param(IS_ADC1_ITPENDINGBIT_OK(ITPendingBit));
      000002 1E 06            [ 2]   49 	ldw	x, (0x06, sp)
      000004 A3 00 80         [ 2]   50 	cpw	x, #0x0080
      000007 27 65            [ 1]   51 	jreq	00110$
      000009 1E 06            [ 2]   52 	ldw	x, (0x06, sp)
      00000B A3 01 40         [ 2]   53 	cpw	x, #0x0140
      00000E 27 5E            [ 1]   54 	jreq	00110$
      000010 1E 06            [ 2]   55 	ldw	x, (0x06, sp)
      000012 A3 01 10         [ 2]   56 	cpw	x, #0x0110
      000015 27 57            [ 1]   57 	jreq	00110$
      000017 1E 06            [ 2]   58 	ldw	x, (0x06, sp)
      000019 A3 01 11         [ 2]   59 	cpw	x, #0x0111
      00001C 27 50            [ 1]   60 	jreq	00110$
      00001E 1E 06            [ 2]   61 	ldw	x, (0x06, sp)
      000020 A3 01 12         [ 2]   62 	cpw	x, #0x0112
      000023 27 49            [ 1]   63 	jreq	00110$
      000025 1E 06            [ 2]   64 	ldw	x, (0x06, sp)
      000027 A3 01 13         [ 2]   65 	cpw	x, #0x0113
      00002A 27 42            [ 1]   66 	jreq	00110$
      00002C 1E 06            [ 2]   67 	ldw	x, (0x06, sp)
      00002E A3 01 14         [ 2]   68 	cpw	x, #0x0114
      000031 27 3B            [ 1]   69 	jreq	00110$
      000033 1E 06            [ 2]   70 	ldw	x, (0x06, sp)
      000035 A3 01 15         [ 2]   71 	cpw	x, #0x0115
      000038 27 34            [ 1]   72 	jreq	00110$
      00003A 1E 06            [ 2]   73 	ldw	x, (0x06, sp)
      00003C A3 01 16         [ 2]   74 	cpw	x, #0x0116
      00003F 27 2D            [ 1]   75 	jreq	00110$
      000041 1E 06            [ 2]   76 	ldw	x, (0x06, sp)
      000043 A3 01 17         [ 2]   77 	cpw	x, #0x0117
      000046 27 26            [ 1]   78 	jreq	00110$
      000048 1E 06            [ 2]   79 	ldw	x, (0x06, sp)
      00004A A3 01 18         [ 2]   80 	cpw	x, #0x0118
      00004D 27 1F            [ 1]   81 	jreq	00110$
      00004F 1E 06            [ 2]   82 	ldw	x, (0x06, sp)
      000051 A3 01 1C         [ 2]   83 	cpw	x, #0x011c
      000054 27 18            [ 1]   84 	jreq	00110$
      000056 1E 06            [ 2]   85 	ldw	x, (0x06, sp)
      000058 A3 01 19         [ 2]   86 	cpw	x, #0x0119
      00005B 27 11            [ 1]   87 	jreq	00110$
      00005D 90 AEr00rC7      [ 2]   88 	ldw	y, #___str_0+0
      000061 4B 47            [ 1]   89 	push	#0x47
      000063 5F               [ 1]   90 	clrw	x
      000064 89               [ 2]   91 	pushw	x
      000065 4B 00            [ 1]   92 	push	#0x00
      000067 90 89            [ 2]   93 	pushw	y
      000069 CDr00r00         [ 4]   94 	call	_assert_failed
      00006C 5B 06            [ 2]   95 	addw	sp, #6
      00006E                         96 00110$:
                                     97 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 73: if (((uint16_t)ITPendingBit & 0xF0) == 0x10)
      00006E 7B 07            [ 1]   98 	ld	a, (0x07, sp)
      000070 A4 F0            [ 1]   99 	and	a, #0xf0
      000072 97               [ 1]  100 	ld	xl, a
      000073 4F               [ 1]  101 	clr	a
      000074 95               [ 1]  102 	ld	xh, a
      000075 A3 00 10         [ 2]  103 	cpw	x, #0x0010
      000078 26 40            [ 1]  104 	jrne	00105$
                                    105 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 76: temp = (uint8_t)((uint16_t)ITPendingBit & 0x0F);
      00007A 7B 07            [ 1]  106 	ld	a, (0x07, sp)
      00007C A4 0F            [ 1]  107 	and	a, #0x0f
      00007E 95               [ 1]  108 	ld	xh, a
      00007F 4F               [ 1]  109 	clr	a
                                    110 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 77: if (temp < 8)
      000080 9E               [ 1]  111 	ld	a, xh
      000081 A1 08            [ 1]  112 	cp	a, #0x08
      000083 24 19            [ 1]  113 	jrnc	00102$
                                    114 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 79: itstatus = (ITStatus)(ADC1->AWSRL & (uint8_t)((uint8_t)1 << temp));
      000085 90 AE 54 0D      [ 2]  115 	ldw	y, #0x540d
      000089 90 F6            [ 1]  116 	ld	a, (y)
      00008B 97               [ 1]  117 	ld	xl, a
      00008C A6 01            [ 1]  118 	ld	a, #0x01
      00008E 6B 01            [ 1]  119 	ld	(0x01, sp), a
      000090 9E               [ 1]  120 	ld	a, xh
      000091 4D               [ 1]  121 	tnz	a
      000092 27 05            [ 1]  122 	jreq	00251$
      000094                        123 00250$:
      000094 08 01            [ 1]  124 	sll	(0x01, sp)
      000096 4A               [ 1]  125 	dec	a
      000097 26 FB            [ 1]  126 	jrne	00250$
      000099                        127 00251$:
      000099 9F               [ 1]  128 	ld	a, xl
      00009A 14 01            [ 1]  129 	and	a, (0x01, sp)
      00009C 20 26            [ 2]  130 	jra	00106$
      00009E                        131 00102$:
                                    132 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 83: itstatus = (ITStatus)(ADC1->AWSRH & (uint8_t)((uint8_t)1 << (temp - 8)));
      00009E 90 AE 54 0C      [ 2]  133 	ldw	y, #0x540c
      0000A2 90 F6            [ 1]  134 	ld	a, (y)
      0000A4 97               [ 1]  135 	ld	xl, a
      0000A5 1D 08 00         [ 2]  136 	subw	x, #2048
      0000A8 A6 01            [ 1]  137 	ld	a, #0x01
      0000AA 6B 03            [ 1]  138 	ld	(0x03, sp), a
      0000AC 9E               [ 1]  139 	ld	a, xh
      0000AD 4D               [ 1]  140 	tnz	a
      0000AE 27 05            [ 1]  141 	jreq	00253$
      0000B0                        142 00252$:
      0000B0 08 03            [ 1]  143 	sll	(0x03, sp)
      0000B2 4A               [ 1]  144 	dec	a
      0000B3 26 FB            [ 1]  145 	jrne	00252$
      0000B5                        146 00253$:
      0000B5 9F               [ 1]  147 	ld	a, xl
      0000B6 14 03            [ 1]  148 	and	a, (0x03, sp)
      0000B8 20 0A            [ 2]  149 	jra	00106$
      0000BA                        150 00105$:
                                    151 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 88: itstatus = (ITStatus)(ADC1->CSR & (uint8_t)ITPendingBit);
      0000BA AE 54 00         [ 2]  152 	ldw	x, #0x5400
      0000BD F6               [ 1]  153 	ld	a, (x)
      0000BE 6B 02            [ 1]  154 	ld	(0x02, sp), a
      0000C0 7B 07            [ 1]  155 	ld	a, (0x07, sp)
      0000C2 14 02            [ 1]  156 	and	a, (0x02, sp)
      0000C4                        157 00106$:
                                    158 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getitstatus.c: 90: return ((ITStatus)itstatus);
      0000C4 5B 03            [ 2]  159 	addw	sp, #3
      0000C6 81               [ 4]  160 	ret
                                    161 	.area CODE
      0000C7                        162 ___str_0:
      0000C7 2F 68 6F 6D 65 2F 67   163 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      000103 65 72 2F 73 72 63 2F   164 	.ascii "er/src/stm8s_adc1.adc1_getitstatus.c"
             73 74 6D 38 73 5F 61
             64 63 31 2E 61 64 63
             31 5F 67 65 74 69 74
             73 74 61 74 75 73 2E
             63
      000127 00                     165 	.db 0x00
                                    166 	.area INITIALIZER
                                    167 	.area CABS (ABS)
