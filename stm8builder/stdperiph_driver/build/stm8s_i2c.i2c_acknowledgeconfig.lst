                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:00 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_i2c_i2c_acknowledgeconfig
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _I2C_AcknowledgeConfig
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 52: void I2C_AcknowledgeConfig(I2C_Ack_TypeDef Ack)
                                     43 ;	-----------------------------------------
                                     44 ;	 function I2C_AcknowledgeConfig
                                     45 ;	-----------------------------------------
      000000                         46 _I2C_AcknowledgeConfig:
      000000 88               [ 1]   47 	push	a
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 55: assert_param(IS_I2C_ACK_OK(Ack));
      000001 7B 04            [ 1]   49 	ld	a, (0x04, sp)
      000003 A1 01            [ 1]   50 	cp	a, #0x01
      000005 26 06            [ 1]   51 	jrne	00138$
      000007 A6 01            [ 1]   52 	ld	a, #0x01
      000009 6B 01            [ 1]   53 	ld	(0x01, sp), a
      00000B 20 02            [ 2]   54 	jra	00139$
      00000D                         55 00138$:
      00000D 0F 01            [ 1]   56 	clr	(0x01, sp)
      00000F                         57 00139$:
      00000F 0D 04            [ 1]   58 	tnz	(0x04, sp)
      000011 27 1B            [ 1]   59 	jreq	00110$
      000013 0D 01            [ 1]   60 	tnz	(0x01, sp)
      000015 26 17            [ 1]   61 	jrne	00110$
      000017 7B 04            [ 1]   62 	ld	a, (0x04, sp)
      000019 A1 02            [ 1]   63 	cp	a, #0x02
      00001B 27 11            [ 1]   64 	jreq	00110$
      00001D 90 AEr00r58      [ 2]   65 	ldw	y, #___str_0+0
      000021 4B 37            [ 1]   66 	push	#0x37
      000023 5F               [ 1]   67 	clrw	x
      000024 89               [ 2]   68 	pushw	x
      000025 4B 00            [ 1]   69 	push	#0x00
      000027 90 89            [ 2]   70 	pushw	y
      000029 CDr00r00         [ 4]   71 	call	_assert_failed
      00002C 5B 06            [ 2]   72 	addw	sp, #6
      00002E                         73 00110$:
                                     74 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 57: if (Ack == I2C_ACK_NONE)
      00002E 0D 04            [ 1]   75 	tnz	(0x04, sp)
      000030 26 09            [ 1]   76 	jrne	00105$
                                     77 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 60: I2C->CR2 &= (uint8_t)(~I2C_CR2_ACK);
      000032 AE 52 11         [ 2]   78 	ldw	x, #0x5211
      000035 F6               [ 1]   79 	ld	a, (x)
      000036 A4 FB            [ 1]   80 	and	a, #0xfb
      000038 F7               [ 1]   81 	ld	(x), a
      000039 20 1B            [ 2]   82 	jra	00107$
      00003B                         83 00105$:
                                     84 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 65: I2C->CR2 |= I2C_CR2_ACK;
      00003B AE 52 11         [ 2]   85 	ldw	x, #0x5211
      00003E F6               [ 1]   86 	ld	a, (x)
      00003F AA 04            [ 1]   87 	or	a, #0x04
      000041 F7               [ 1]   88 	ld	(x), a
                                     89 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 67: if (Ack == I2C_ACK_CURR)
      000042 0D 01            [ 1]   90 	tnz	(0x01, sp)
      000044 27 09            [ 1]   91 	jreq	00102$
                                     92 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 70: I2C->CR2 &= (uint8_t)(~I2C_CR2_POS);
      000046 AE 52 11         [ 2]   93 	ldw	x, #0x5211
      000049 F6               [ 1]   94 	ld	a, (x)
      00004A A4 F7            [ 1]   95 	and	a, #0xf7
      00004C F7               [ 1]   96 	ld	(x), a
      00004D 20 07            [ 2]   97 	jra	00107$
      00004F                         98 00102$:
                                     99 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_acknowledgeconfig.c: 75: I2C->CR2 |= I2C_CR2_POS;
      00004F AE 52 11         [ 2]  100 	ldw	x, #0x5211
      000052 F6               [ 1]  101 	ld	a, (x)
      000053 AA 08            [ 1]  102 	or	a, #0x08
      000055 F7               [ 1]  103 	ld	(x), a
      000056                        104 00107$:
      000056 84               [ 1]  105 	pop	a
      000057 81               [ 4]  106 	ret
                                    107 	.area CODE
      000058                        108 ___str_0:
      000058 2F 68 6F 6D 65 2F 67   109 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      000094 65 72 2F 73 72 63 2F   110 	.ascii "er/src/stm8s_i2c.i2c_acknowledgeconfig.c"
             73 74 6D 38 73 5F 69
             32 63 2E 69 32 63 5F
             61 63 6B 6E 6F 77 6C
             65 64 67 65 63 6F 6E
             66 69 67 2E 63
      0000BC 00                     111 	.db 0x00
                                    112 	.area INITIALIZER
                                    113 	.area CABS (ABS)
