                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:27:56 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_clk_clk_peripheralclockconfig
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _CLK_PeripheralClockConfig
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 56: void CLK_PeripheralClockConfig(CLK_Peripheral_TypeDef CLK_Peripheral, FunctionalState NewState)
                                     43 ;	-----------------------------------------
                                     44 ;	 function CLK_PeripheralClockConfig
                                     45 ;	-----------------------------------------
      000000                         46 _CLK_PeripheralClockConfig:
      000000 89               [ 2]   47 	pushw	x
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 59: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000001 0D 06            [ 1]   49 	tnz	(0x06, sp)
      000003 27 17            [ 1]   50 	jreq	00113$
      000005 7B 06            [ 1]   51 	ld	a, (0x06, sp)
      000007 A1 01            [ 1]   52 	cp	a, #0x01
      000009 27 11            [ 1]   53 	jreq	00113$
      00000B 90 AEr00rE2      [ 2]   54 	ldw	y, #___str_0+0
      00000F 4B 3B            [ 1]   55 	push	#0x3b
      000011 5F               [ 1]   56 	clrw	x
      000012 89               [ 2]   57 	pushw	x
      000013 4B 00            [ 1]   58 	push	#0x00
      000015 90 89            [ 2]   59 	pushw	y
      000017 CDr00r00         [ 4]   60 	call	_assert_failed
      00001A 5B 06            [ 2]   61 	addw	sp, #6
      00001C                         62 00113$:
                                     63 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 60: assert_param(IS_CLK_PERIPHERAL_OK(CLK_Peripheral));
      00001C 0D 05            [ 1]   64 	tnz	(0x05, sp)
      00001E 27 6D            [ 1]   65 	jreq	00118$
      000020 7B 05            [ 1]   66 	ld	a, (0x05, sp)
      000022 A1 01            [ 1]   67 	cp	a, #0x01
      000024 27 67            [ 1]   68 	jreq	00118$
      000026 7B 05            [ 1]   69 	ld	a, (0x05, sp)
      000028 A1 03            [ 1]   70 	cp	a, #0x03
      00002A 26 03            [ 1]   71 	jrne	00243$
      00002C A6 01            [ 1]   72 	ld	a, #0x01
      00002E 21                      73 	.byte 0x21
      00002F                         74 00243$:
      00002F 4F               [ 1]   75 	clr	a
      000030                         76 00244$:
      000030 4D               [ 1]   77 	tnz	a
      000031 26 5A            [ 1]   78 	jrne	00118$
      000033 4D               [ 1]   79 	tnz	a
      000034 26 57            [ 1]   80 	jrne	00118$
      000036 4D               [ 1]   81 	tnz	a
      000037 26 54            [ 1]   82 	jrne	00118$
      000039 7B 05            [ 1]   83 	ld	a, (0x05, sp)
      00003B A1 04            [ 1]   84 	cp	a, #0x04
      00003D 26 05            [ 1]   85 	jrne	00249$
      00003F A6 01            [ 1]   86 	ld	a, #0x01
      000041 95               [ 1]   87 	ld	xh, a
      000042 20 02            [ 2]   88 	jra	00250$
      000044                         89 00249$:
      000044 4F               [ 1]   90 	clr	a
      000045 95               [ 1]   91 	ld	xh, a
      000046                         92 00250$:
      000046 9E               [ 1]   93 	ld	a, xh
      000047 4D               [ 1]   94 	tnz	a
      000048 26 43            [ 1]   95 	jrne	00118$
      00004A 7B 05            [ 1]   96 	ld	a, (0x05, sp)
      00004C A1 05            [ 1]   97 	cp	a, #0x05
      00004E 26 03            [ 1]   98 	jrne	00253$
      000050 A6 01            [ 1]   99 	ld	a, #0x01
      000052 21                     100 	.byte 0x21
      000053                        101 00253$:
      000053 4F               [ 1]  102 	clr	a
      000054                        103 00254$:
      000054 4D               [ 1]  104 	tnz	a
      000055 26 36            [ 1]  105 	jrne	00118$
      000057 4D               [ 1]  106 	tnz	a
      000058 26 33            [ 1]  107 	jrne	00118$
      00005A 9E               [ 1]  108 	ld	a, xh
      00005B 4D               [ 1]  109 	tnz	a
      00005C 26 2F            [ 1]  110 	jrne	00118$
      00005E 7B 05            [ 1]  111 	ld	a, (0x05, sp)
      000060 A1 06            [ 1]  112 	cp	a, #0x06
      000062 27 29            [ 1]  113 	jreq	00118$
      000064 7B 05            [ 1]  114 	ld	a, (0x05, sp)
      000066 A1 07            [ 1]  115 	cp	a, #0x07
      000068 27 23            [ 1]  116 	jreq	00118$
      00006A 7B 05            [ 1]  117 	ld	a, (0x05, sp)
      00006C A1 17            [ 1]  118 	cp	a, #0x17
      00006E 27 1D            [ 1]  119 	jreq	00118$
      000070 7B 05            [ 1]  120 	ld	a, (0x05, sp)
      000072 A1 13            [ 1]  121 	cp	a, #0x13
      000074 27 17            [ 1]  122 	jreq	00118$
      000076 7B 05            [ 1]  123 	ld	a, (0x05, sp)
      000078 A1 12            [ 1]  124 	cp	a, #0x12
      00007A 27 11            [ 1]  125 	jreq	00118$
      00007C 90 AEr00rE2      [ 2]  126 	ldw	y, #___str_0+0
      000080 4B 3C            [ 1]  127 	push	#0x3c
      000082 5F               [ 1]  128 	clrw	x
      000083 89               [ 2]  129 	pushw	x
      000084 4B 00            [ 1]  130 	push	#0x00
      000086 90 89            [ 2]  131 	pushw	y
      000088 CDr00r00         [ 4]  132 	call	_assert_failed
      00008B 5B 06            [ 2]  133 	addw	sp, #6
      00008D                        134 00118$:
                                    135 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 67: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      00008D 7B 05            [ 1]  136 	ld	a, (0x05, sp)
      00008F A4 0F            [ 1]  137 	and	a, #0x0f
      000091 95               [ 1]  138 	ld	xh, a
      000092 A6 01            [ 1]  139 	ld	a, #0x01
      000094 6B 01            [ 1]  140 	ld	(0x01, sp), a
      000096 9E               [ 1]  141 	ld	a, xh
      000097 4D               [ 1]  142 	tnz	a
      000098 27 05            [ 1]  143 	jreq	00274$
      00009A                        144 00273$:
      00009A 08 01            [ 1]  145 	sll	(0x01, sp)
      00009C 4A               [ 1]  146 	dec	a
      00009D 26 FB            [ 1]  147 	jrne	00273$
      00009F                        148 00274$:
                                    149 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 72: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      00009F 7B 01            [ 1]  150 	ld	a, (0x01, sp)
      0000A1 43               [ 1]  151 	cpl	a
      0000A2 6B 02            [ 1]  152 	ld	(0x02, sp), a
                                    153 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 62: if (((uint8_t)CLK_Peripheral & (uint8_t)0x10) == 0x00)
      0000A4 7B 05            [ 1]  154 	ld	a, (0x05, sp)
      0000A6 A5 10            [ 1]  155 	bcp	a, #0x10
      0000A8 26 1C            [ 1]  156 	jrne	00108$
                                    157 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 64: if (NewState != DISABLE)
      0000AA 0D 06            [ 1]  158 	tnz	(0x06, sp)
      0000AC 27 0C            [ 1]  159 	jreq	00102$
                                    160 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 67: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      0000AE AE 50 C7         [ 2]  161 	ldw	x, #0x50c7
      0000B1 F6               [ 1]  162 	ld	a, (x)
      0000B2 1A 01            [ 1]  163 	or	a, (0x01, sp)
      0000B4 AE 50 C7         [ 2]  164 	ldw	x, #0x50c7
      0000B7 F7               [ 1]  165 	ld	(x), a
      0000B8 20 26            [ 2]  166 	jra	00110$
      0000BA                        167 00102$:
                                    168 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 72: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      0000BA AE 50 C7         [ 2]  169 	ldw	x, #0x50c7
      0000BD F6               [ 1]  170 	ld	a, (x)
      0000BE 14 02            [ 1]  171 	and	a, (0x02, sp)
      0000C0 AE 50 C7         [ 2]  172 	ldw	x, #0x50c7
      0000C3 F7               [ 1]  173 	ld	(x), a
      0000C4 20 1A            [ 2]  174 	jra	00110$
      0000C6                        175 00108$:
                                    176 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 77: if (NewState != DISABLE)
      0000C6 0D 06            [ 1]  177 	tnz	(0x06, sp)
      0000C8 27 0C            [ 1]  178 	jreq	00105$
                                    179 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 80: CLK->PCKENR2 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      0000CA AE 50 CA         [ 2]  180 	ldw	x, #0x50ca
      0000CD F6               [ 1]  181 	ld	a, (x)
      0000CE 1A 01            [ 1]  182 	or	a, (0x01, sp)
      0000D0 AE 50 CA         [ 2]  183 	ldw	x, #0x50ca
      0000D3 F7               [ 1]  184 	ld	(x), a
      0000D4 20 0A            [ 2]  185 	jra	00110$
      0000D6                        186 00105$:
                                    187 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_peripheralclockconfig.c: 85: CLK->PCKENR2 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      0000D6 AE 50 CA         [ 2]  188 	ldw	x, #0x50ca
      0000D9 F6               [ 1]  189 	ld	a, (x)
      0000DA 14 02            [ 1]  190 	and	a, (0x02, sp)
      0000DC AE 50 CA         [ 2]  191 	ldw	x, #0x50ca
      0000DF F7               [ 1]  192 	ld	(x), a
      0000E0                        193 00110$:
      0000E0 85               [ 2]  194 	popw	x
      0000E1 81               [ 4]  195 	ret
                                    196 	.area CODE
      0000E2                        197 ___str_0:
      0000E2 2F 68 6F 6D 65 2F 67   198 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      00011E 65 72 2F 73 72 63 2F   199 	.ascii "er/src/stm8s_clk.clk_peripheralclockconfig.c"
             73 74 6D 38 73 5F 63
             6C 6B 2E 63 6C 6B 5F
             70 65 72 69 70 68 65
             72 61 6C 63 6C 6F 63
             6B 63 6F 6E 66 69 67
             2E 63
      00014A 00                     200 	.db 0x00
                                    201 	.area INITIALIZER
                                    202 	.area CABS (ABS)
