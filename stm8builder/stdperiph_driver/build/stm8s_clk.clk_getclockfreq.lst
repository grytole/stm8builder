                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:27:55 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_clk_clk_getclockfreq
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _HSIDivFactor
                                     13 	.globl _CLK_GetClockFreq
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 65: uint32_t CLK_GetClockFreq(void)
                                     43 ;	-----------------------------------------
                                     44 ;	 function CLK_GetClockFreq
                                     45 ;	-----------------------------------------
      000000                         46 _CLK_GetClockFreq:
      000000 52 07            [ 2]   47 	sub	sp, #7
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 72: clocksource = (CLK_Source_TypeDef)CLK->CMSR;
      000002 AE 50 C3         [ 2]   49 	ldw	x, #0x50c3
      000005 F6               [ 1]   50 	ld	a, (x)
      000006 6B 01            [ 1]   51 	ld	(0x01, sp), a
                                     52 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 74: if (clocksource == CLK_SOURCE_HSI)
      000008 7B 01            [ 1]   53 	ld	a, (0x01, sp)
      00000A A1 E1            [ 1]   54 	cp	a, #0xe1
      00000C 26 2C            [ 1]   55 	jrne	00105$
                                     56 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 76: tmp = (uint8_t)(CLK->CKDIVR & CLK_CKDIVR_HSIDIV);
      00000E AE 50 C6         [ 2]   57 	ldw	x, #0x50c6
      000011 F6               [ 1]   58 	ld	a, (x)
      000012 A4 18            [ 1]   59 	and	a, #0x18
                                     60 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 77: tmp = (uint8_t)(tmp >> 3);
      000014 44               [ 1]   61 	srl	a
      000015 44               [ 1]   62 	srl	a
      000016 44               [ 1]   63 	srl	a
                                     64 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 78: presc = HSIDivFactor[tmp];
      000017 AEr00r59         [ 2]   65 	ldw	x, #_HSIDivFactor+0
      00001A 1F 06            [ 2]   66 	ldw	(0x06, sp), x
      00001C 5F               [ 1]   67 	clrw	x
      00001D 97               [ 1]   68 	ld	xl, a
      00001E 72 FB 06         [ 2]   69 	addw	x, (0x06, sp)
      000021 F6               [ 1]   70 	ld	a, (x)
                                     71 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 79: clockfrequency = HSI_VALUE / presc;
      000022 5F               [ 1]   72 	clrw	x
      000023 97               [ 1]   73 	ld	xl, a
      000024 90 5F            [ 1]   74 	clrw	y
      000026 89               [ 2]   75 	pushw	x
      000027 90 89            [ 2]   76 	pushw	y
      000029 4B 00            [ 1]   77 	push	#0x00
      00002B 4B 24            [ 1]   78 	push	#0x24
      00002D 4B F4            [ 1]   79 	push	#0xf4
      00002F 4B 00            [ 1]   80 	push	#0x00
      000031 CDr00r00         [ 4]   81 	call	__divulong
      000034 5B 08            [ 2]   82 	addw	sp, #8
      000036 1F 04            [ 2]   83 	ldw	(0x04, sp), x
      000038 20 1A            [ 2]   84 	jra	00106$
      00003A                         85 00105$:
                                     86 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 81: else if ( clocksource == CLK_SOURCE_LSI)
      00003A 7B 01            [ 1]   87 	ld	a, (0x01, sp)
      00003C A1 D2            [ 1]   88 	cp	a, #0xd2
      00003E 26 0B            [ 1]   89 	jrne	00102$
                                     90 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 83: clockfrequency = LSI_VALUE;
      000040 AE F4 00         [ 2]   91 	ldw	x, #0xf400
      000043 1F 04            [ 2]   92 	ldw	(0x04, sp), x
      000045 90 AE 00 01      [ 2]   93 	ldw	y, #0x0001
      000049 20 09            [ 2]   94 	jra	00106$
      00004B                         95 00102$:
                                     96 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 87: clockfrequency = HSE_VALUE;
      00004B AE 24 00         [ 2]   97 	ldw	x, #0x2400
      00004E 1F 04            [ 2]   98 	ldw	(0x04, sp), x
      000050 90 AE 00 F4      [ 2]   99 	ldw	y, #0x00f4
      000054                        100 00106$:
                                    101 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_clk.clk_getclockfreq.c: 90: return((uint32_t)clockfrequency);
      000054 1E 04            [ 2]  102 	ldw	x, (0x04, sp)
      000056 5B 07            [ 2]  103 	addw	sp, #7
      000058 81               [ 4]  104 	ret
                                    105 	.area CODE
      000059                        106 _HSIDivFactor:
      000059 01                     107 	.db #0x01	; 1
      00005A 02                     108 	.db #0x02	; 2
      00005B 04                     109 	.db #0x04	; 4
      00005C 08                     110 	.db #0x08	; 8
                                    111 	.area INITIALIZER
                                    112 	.area CABS (ABS)
