                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:13 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_adc1_adc1_conversionconfig
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _ADC1_ConversionConfig
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 57: void ADC1_ConversionConfig(ADC1_ConvMode_TypeDef ADC1_ConversionMode, ADC1_Channel_TypeDef ADC1_Channel, ADC1_Align_TypeDef ADC1_Align)
                                     43 ;	-----------------------------------------
                                     44 ;	 function ADC1_ConversionConfig
                                     45 ;	-----------------------------------------
      000000                         46 _ADC1_ConversionConfig:
      000000 88               [ 1]   47 	push	a
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 60: assert_param(IS_ADC1_CONVERSIONMODE_OK(ADC1_ConversionMode));
      000001 7B 04            [ 1]   49 	ld	a, (0x04, sp)
      000003 A1 01            [ 1]   50 	cp	a, #0x01
      000005 26 06            [ 1]   51 	jrne	00213$
      000007 A6 01            [ 1]   52 	ld	a, #0x01
      000009 6B 01            [ 1]   53 	ld	(0x01, sp), a
      00000B 20 02            [ 2]   54 	jra	00214$
      00000D                         55 00213$:
      00000D 0F 01            [ 1]   56 	clr	(0x01, sp)
      00000F                         57 00214$:
      00000F 0D 04            [ 1]   58 	tnz	(0x04, sp)
      000011 27 15            [ 1]   59 	jreq	00107$
      000013 0D 01            [ 1]   60 	tnz	(0x01, sp)
      000015 26 11            [ 1]   61 	jrne	00107$
      000017 90 AEr00rCC      [ 2]   62 	ldw	y, #___str_0+0
      00001B 4B 3C            [ 1]   63 	push	#0x3c
      00001D 5F               [ 1]   64 	clrw	x
      00001E 89               [ 2]   65 	pushw	x
      00001F 4B 00            [ 1]   66 	push	#0x00
      000021 90 89            [ 2]   67 	pushw	y
      000023 CDr00r00         [ 4]   68 	call	_assert_failed
      000026 5B 06            [ 2]   69 	addw	sp, #6
      000028                         70 00107$:
                                     71 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 61: assert_param(IS_ADC1_CHANNEL_OK(ADC1_Channel));
      000028 0D 05            [ 1]   72 	tnz	(0x05, sp)
      00002A 27 4D            [ 1]   73 	jreq	00112$
      00002C 7B 05            [ 1]   74 	ld	a, (0x05, sp)
      00002E A1 01            [ 1]   75 	cp	a, #0x01
      000030 27 47            [ 1]   76 	jreq	00112$
      000032 7B 05            [ 1]   77 	ld	a, (0x05, sp)
      000034 A1 02            [ 1]   78 	cp	a, #0x02
      000036 27 41            [ 1]   79 	jreq	00112$
      000038 7B 05            [ 1]   80 	ld	a, (0x05, sp)
      00003A A1 03            [ 1]   81 	cp	a, #0x03
      00003C 27 3B            [ 1]   82 	jreq	00112$
      00003E 7B 05            [ 1]   83 	ld	a, (0x05, sp)
      000040 A1 04            [ 1]   84 	cp	a, #0x04
      000042 27 35            [ 1]   85 	jreq	00112$
      000044 7B 05            [ 1]   86 	ld	a, (0x05, sp)
      000046 A1 05            [ 1]   87 	cp	a, #0x05
      000048 27 2F            [ 1]   88 	jreq	00112$
      00004A 7B 05            [ 1]   89 	ld	a, (0x05, sp)
      00004C A1 06            [ 1]   90 	cp	a, #0x06
      00004E 27 29            [ 1]   91 	jreq	00112$
      000050 7B 05            [ 1]   92 	ld	a, (0x05, sp)
      000052 A1 07            [ 1]   93 	cp	a, #0x07
      000054 27 23            [ 1]   94 	jreq	00112$
      000056 7B 05            [ 1]   95 	ld	a, (0x05, sp)
      000058 A1 08            [ 1]   96 	cp	a, #0x08
      00005A 27 1D            [ 1]   97 	jreq	00112$
      00005C 7B 05            [ 1]   98 	ld	a, (0x05, sp)
      00005E A1 0C            [ 1]   99 	cp	a, #0x0c
      000060 27 17            [ 1]  100 	jreq	00112$
      000062 7B 05            [ 1]  101 	ld	a, (0x05, sp)
      000064 A1 09            [ 1]  102 	cp	a, #0x09
      000066 27 11            [ 1]  103 	jreq	00112$
      000068 90 AEr00rCC      [ 2]  104 	ldw	y, #___str_0+0
      00006C 4B 3D            [ 1]  105 	push	#0x3d
      00006E 5F               [ 1]  106 	clrw	x
      00006F 89               [ 2]  107 	pushw	x
      000070 4B 00            [ 1]  108 	push	#0x00
      000072 90 89            [ 2]  109 	pushw	y
      000074 CDr00r00         [ 4]  110 	call	_assert_failed
      000077 5B 06            [ 2]  111 	addw	sp, #6
      000079                        112 00112$:
                                    113 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 62: assert_param(IS_ADC1_ALIGN_OK(ADC1_Align));
      000079 0D 06            [ 1]  114 	tnz	(0x06, sp)
      00007B 27 17            [ 1]  115 	jreq	00144$
      00007D 7B 06            [ 1]  116 	ld	a, (0x06, sp)
      00007F A1 08            [ 1]  117 	cp	a, #0x08
      000081 27 11            [ 1]  118 	jreq	00144$
      000083 90 AEr00rCC      [ 2]  119 	ldw	y, #___str_0+0
      000087 4B 3E            [ 1]  120 	push	#0x3e
      000089 5F               [ 1]  121 	clrw	x
      00008A 89               [ 2]  122 	pushw	x
      00008B 4B 00            [ 1]  123 	push	#0x00
      00008D 90 89            [ 2]  124 	pushw	y
      00008F CDr00r00         [ 4]  125 	call	_assert_failed
      000092 5B 06            [ 2]  126 	addw	sp, #6
      000094                        127 00144$:
                                    128 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 65: ADC1->CR2 &= (uint8_t)(~ADC1_CR2_ALIGN);
      000094 AE 54 02         [ 2]  129 	ldw	x, #0x5402
      000097 F6               [ 1]  130 	ld	a, (x)
      000098 A4 F7            [ 1]  131 	and	a, #0xf7
      00009A F7               [ 1]  132 	ld	(x), a
                                    133 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 67: ADC1->CR2 |= (uint8_t)(ADC1_Align);
      00009B AE 54 02         [ 2]  134 	ldw	x, #0x5402
      00009E F6               [ 1]  135 	ld	a, (x)
      00009F 1A 06            [ 1]  136 	or	a, (0x06, sp)
      0000A1 AE 54 02         [ 2]  137 	ldw	x, #0x5402
      0000A4 F7               [ 1]  138 	ld	(x), a
                                    139 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 69: if (ADC1_ConversionMode == ADC1_CONVERSIONMODE_CONTINUOUS)
      0000A5 0D 01            [ 1]  140 	tnz	(0x01, sp)
      0000A7 27 09            [ 1]  141 	jreq	00102$
                                    142 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 72: ADC1->CR1 |= ADC1_CR1_CONT;
      0000A9 AE 54 01         [ 2]  143 	ldw	x, #0x5401
      0000AC F6               [ 1]  144 	ld	a, (x)
      0000AD AA 02            [ 1]  145 	or	a, #0x02
      0000AF F7               [ 1]  146 	ld	(x), a
      0000B0 20 07            [ 2]  147 	jra	00103$
      0000B2                        148 00102$:
                                    149 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 77: ADC1->CR1 &= (uint8_t)(~ADC1_CR1_CONT);
      0000B2 AE 54 01         [ 2]  150 	ldw	x, #0x5401
      0000B5 F6               [ 1]  151 	ld	a, (x)
      0000B6 A4 FD            [ 1]  152 	and	a, #0xfd
      0000B8 F7               [ 1]  153 	ld	(x), a
      0000B9                        154 00103$:
                                    155 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 81: ADC1->CSR &= (uint8_t)(~ADC1_CSR_CH);
      0000B9 AE 54 00         [ 2]  156 	ldw	x, #0x5400
      0000BC F6               [ 1]  157 	ld	a, (x)
      0000BD A4 F0            [ 1]  158 	and	a, #0xf0
      0000BF F7               [ 1]  159 	ld	(x), a
                                    160 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_conversionconfig.c: 83: ADC1->CSR |= (uint8_t)(ADC1_Channel);
      0000C0 AE 54 00         [ 2]  161 	ldw	x, #0x5400
      0000C3 F6               [ 1]  162 	ld	a, (x)
      0000C4 1A 05            [ 1]  163 	or	a, (0x05, sp)
      0000C6 AE 54 00         [ 2]  164 	ldw	x, #0x5400
      0000C9 F7               [ 1]  165 	ld	(x), a
      0000CA 84               [ 1]  166 	pop	a
      0000CB 81               [ 4]  167 	ret
                                    168 	.area CODE
      0000CC                        169 ___str_0:
      0000CC 2F 68 6F 6D 65 2F 67   170 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      000108 65 72 2F 73 72 63 2F   171 	.ascii "er/src/stm8s_adc1.adc1_conversionconfig.c"
             73 74 6D 38 73 5F 61
             64 63 31 2E 61 64 63
             31 5F 63 6F 6E 76 65
             72 73 69 6F 6E 63 6F
             6E 66 69 67 2E 63
      000131 00                     172 	.db 0x00
                                    173 	.area INITIALIZER
                                    174 	.area CABS (ABS)
