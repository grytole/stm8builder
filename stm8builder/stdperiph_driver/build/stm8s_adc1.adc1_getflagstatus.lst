                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:11 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_adc1_adc1_getflagstatus
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _ADC1_GetFlagStatus
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 53: FlagStatus ADC1_GetFlagStatus(ADC1_Flag_TypeDef Flag)
                                     43 ;	-----------------------------------------
                                     44 ;	 function ADC1_GetFlagStatus
                                     45 ;	-----------------------------------------
      000000                         46 _ADC1_GetFlagStatus:
      000000 52 03            [ 2]   47 	sub	sp, #3
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 59: assert_param(IS_ADC1_FLAG_OK(Flag));
      000002 7B 06            [ 1]   49 	ld	a, (0x06, sp)
      000004 A1 80            [ 1]   50 	cp	a, #0x80
      000006 27 59            [ 1]   51 	jreq	00113$
      000008 7B 06            [ 1]   52 	ld	a, (0x06, sp)
      00000A A1 41            [ 1]   53 	cp	a, #0x41
      00000C 27 53            [ 1]   54 	jreq	00113$
      00000E 7B 06            [ 1]   55 	ld	a, (0x06, sp)
      000010 A1 40            [ 1]   56 	cp	a, #0x40
      000012 27 4D            [ 1]   57 	jreq	00113$
      000014 7B 06            [ 1]   58 	ld	a, (0x06, sp)
      000016 A1 10            [ 1]   59 	cp	a, #0x10
      000018 27 47            [ 1]   60 	jreq	00113$
      00001A 7B 06            [ 1]   61 	ld	a, (0x06, sp)
      00001C A1 11            [ 1]   62 	cp	a, #0x11
      00001E 27 41            [ 1]   63 	jreq	00113$
      000020 7B 06            [ 1]   64 	ld	a, (0x06, sp)
      000022 A1 12            [ 1]   65 	cp	a, #0x12
      000024 27 3B            [ 1]   66 	jreq	00113$
      000026 7B 06            [ 1]   67 	ld	a, (0x06, sp)
      000028 A1 13            [ 1]   68 	cp	a, #0x13
      00002A 27 35            [ 1]   69 	jreq	00113$
      00002C 7B 06            [ 1]   70 	ld	a, (0x06, sp)
      00002E A1 14            [ 1]   71 	cp	a, #0x14
      000030 27 2F            [ 1]   72 	jreq	00113$
      000032 7B 06            [ 1]   73 	ld	a, (0x06, sp)
      000034 A1 15            [ 1]   74 	cp	a, #0x15
      000036 27 29            [ 1]   75 	jreq	00113$
      000038 7B 06            [ 1]   76 	ld	a, (0x06, sp)
      00003A A1 16            [ 1]   77 	cp	a, #0x16
      00003C 27 23            [ 1]   78 	jreq	00113$
      00003E 7B 06            [ 1]   79 	ld	a, (0x06, sp)
      000040 A1 17            [ 1]   80 	cp	a, #0x17
      000042 27 1D            [ 1]   81 	jreq	00113$
      000044 7B 06            [ 1]   82 	ld	a, (0x06, sp)
      000046 A1 18            [ 1]   83 	cp	a, #0x18
      000048 27 17            [ 1]   84 	jreq	00113$
      00004A 7B 06            [ 1]   85 	ld	a, (0x06, sp)
      00004C A1 19            [ 1]   86 	cp	a, #0x19
      00004E 27 11            [ 1]   87 	jreq	00113$
      000050 90 AEr00rC0      [ 2]   88 	ldw	y, #___str_0+0
      000054 4B 3B            [ 1]   89 	push	#0x3b
      000056 5F               [ 1]   90 	clrw	x
      000057 89               [ 2]   91 	pushw	x
      000058 4B 00            [ 1]   92 	push	#0x00
      00005A 90 89            [ 2]   93 	pushw	y
      00005C CDr00r00         [ 4]   94 	call	_assert_failed
      00005F 5B 06            [ 2]   95 	addw	sp, #6
      000061                         96 00113$:
                                     97 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 61: if ((Flag & 0x0F) == 0x01)
      000061 7B 06            [ 1]   98 	ld	a, (0x06, sp)
      000063 A4 0F            [ 1]   99 	and	a, #0x0f
      000065 6B 01            [ 1]  100 	ld	(0x01, sp), a
      000067 7B 01            [ 1]  101 	ld	a, (0x01, sp)
      000069 A1 01            [ 1]  102 	cp	a, #0x01
      00006B 26 08            [ 1]  103 	jrne	00108$
                                    104 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 64: flagstatus = (uint8_t)(ADC1->CR3 & ADC1_CR3_OVR);
      00006D AE 54 03         [ 2]  105 	ldw	x, #0x5403
      000070 F6               [ 1]  106 	ld	a, (x)
      000071 A4 40            [ 1]  107 	and	a, #0x40
      000073 20 48            [ 2]  108 	jra	00109$
      000075                        109 00108$:
                                    110 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 66: else if ((Flag & 0xF0) == 0x10)
      000075 7B 06            [ 1]  111 	ld	a, (0x06, sp)
      000077 A4 F0            [ 1]  112 	and	a, #0xf0
      000079 A1 10            [ 1]  113 	cp	a, #0x10
      00007B 26 3A            [ 1]  114 	jrne	00105$
                                    115 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 69: temp = (uint8_t)(Flag & (uint8_t)0x0F);
      00007D 7B 01            [ 1]  116 	ld	a, (0x01, sp)
                                    117 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 70: if (temp < 8)
      00007F A1 08            [ 1]  118 	cp	a, #0x08
      000081 24 18            [ 1]  119 	jrnc	00102$
                                    120 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 72: flagstatus = (uint8_t)(ADC1->AWSRL & (uint8_t)((uint8_t)1 << temp));
      000083 AE 54 0D         [ 2]  121 	ldw	x, #0x540d
      000086 88               [ 1]  122 	push	a
      000087 F6               [ 1]  123 	ld	a, (x)
      000088 95               [ 1]  124 	ld	xh, a
      000089 A6 01            [ 1]  125 	ld	a, #0x01
      00008B 6B 03            [ 1]  126 	ld	(0x03, sp), a
      00008D 84               [ 1]  127 	pop	a
      00008E 4D               [ 1]  128 	tnz	a
      00008F 27 05            [ 1]  129 	jreq	00261$
      000091                        130 00260$:
      000091 08 02            [ 1]  131 	sll	(0x02, sp)
      000093 4A               [ 1]  132 	dec	a
      000094 26 FB            [ 1]  133 	jrne	00260$
      000096                        134 00261$:
      000096 9E               [ 1]  135 	ld	a, xh
      000097 14 02            [ 1]  136 	and	a, (0x02, sp)
      000099 20 22            [ 2]  137 	jra	00109$
      00009B                        138 00102$:
                                    139 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 76: flagstatus = (uint8_t)(ADC1->AWSRH & (uint8_t)((uint8_t)1 << (temp - 8)));
      00009B AE 54 0C         [ 2]  140 	ldw	x, #0x540c
      00009E 88               [ 1]  141 	push	a
      00009F F6               [ 1]  142 	ld	a, (x)
      0000A0 95               [ 1]  143 	ld	xh, a
      0000A1 84               [ 1]  144 	pop	a
      0000A2 A0 08            [ 1]  145 	sub	a, #0x08
      0000A4 97               [ 1]  146 	ld	xl, a
      0000A5 A6 01            [ 1]  147 	ld	a, #0x01
      0000A7 6B 03            [ 1]  148 	ld	(0x03, sp), a
      0000A9 9F               [ 1]  149 	ld	a, xl
      0000AA 4D               [ 1]  150 	tnz	a
      0000AB 27 05            [ 1]  151 	jreq	00263$
      0000AD                        152 00262$:
      0000AD 08 03            [ 1]  153 	sll	(0x03, sp)
      0000AF 4A               [ 1]  154 	dec	a
      0000B0 26 FB            [ 1]  155 	jrne	00262$
      0000B2                        156 00263$:
      0000B2 9E               [ 1]  157 	ld	a, xh
      0000B3 14 03            [ 1]  158 	and	a, (0x03, sp)
      0000B5 20 06            [ 2]  159 	jra	00109$
      0000B7                        160 00105$:
                                    161 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 81: flagstatus = (uint8_t)(ADC1->CSR & Flag);
      0000B7 AE 54 00         [ 2]  162 	ldw	x, #0x5400
      0000BA F6               [ 1]  163 	ld	a, (x)
      0000BB 14 06            [ 1]  164 	and	a, (0x06, sp)
      0000BD                        165 00109$:
                                    166 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_adc1.adc1_getflagstatus.c: 83: return ((FlagStatus)flagstatus);
      0000BD 5B 03            [ 2]  167 	addw	sp, #3
      0000BF 81               [ 4]  168 	ret
                                    169 	.area CODE
      0000C0                        170 ___str_0:
      0000C0 2F 68 6F 6D 65 2F 67   171 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      0000FC 65 72 2F 73 72 63 2F   172 	.ascii "er/src/stm8s_adc1.adc1_getflagstatus.c"
             73 74 6D 38 73 5F 61
             64 63 31 2E 61 64 63
             31 5F 67 65 74 66 6C
             61 67 73 74 61 74 75
             73 2E 63
      000122 00                     173 	.db 0x00
                                    174 	.area INITIALIZER
                                    175 	.area CABS (ABS)
