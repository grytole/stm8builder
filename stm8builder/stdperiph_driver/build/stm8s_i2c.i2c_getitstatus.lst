                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:01 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_i2c_i2c_getitstatus
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _I2C_GetITStatus
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 78: ITStatus I2C_GetITStatus(I2C_ITPendingBit_TypeDef I2C_ITPendingBit)
                                     43 ;	-----------------------------------------
                                     44 ;	 function I2C_GetITStatus
                                     45 ;	-----------------------------------------
      000000                         46 _I2C_GetITStatus:
      000000 52 04            [ 2]   47 	sub	sp, #4
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 81: __IO uint8_t enablestatus = 0;
      000002 0F 01            [ 1]   49 	clr	(0x01, sp)
                                     50 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 85: assert_param(IS_I2C_ITPENDINGBIT_OK(I2C_ITPendingBit));
      000004 1E 07            [ 2]   51 	ldw	x, (0x07, sp)
      000006 A3 16 80         [ 2]   52 	cpw	x, #0x1680
      000009 27 5E            [ 1]   53 	jreq	00115$
      00000B 1E 07            [ 2]   54 	ldw	x, (0x07, sp)
      00000D A3 16 40         [ 2]   55 	cpw	x, #0x1640
      000010 27 57            [ 1]   56 	jreq	00115$
      000012 1E 07            [ 2]   57 	ldw	x, (0x07, sp)
      000014 A3 12 10         [ 2]   58 	cpw	x, #0x1210
      000017 27 50            [ 1]   59 	jreq	00115$
      000019 1E 07            [ 2]   60 	ldw	x, (0x07, sp)
      00001B A3 12 08         [ 2]   61 	cpw	x, #0x1208
      00001E 27 49            [ 1]   62 	jreq	00115$
      000020 1E 07            [ 2]   63 	ldw	x, (0x07, sp)
      000022 A3 12 04         [ 2]   64 	cpw	x, #0x1204
      000025 27 42            [ 1]   65 	jreq	00115$
      000027 1E 07            [ 2]   66 	ldw	x, (0x07, sp)
      000029 A3 12 02         [ 2]   67 	cpw	x, #0x1202
      00002C 27 3B            [ 1]   68 	jreq	00115$
      00002E 1E 07            [ 2]   69 	ldw	x, (0x07, sp)
      000030 A3 12 01         [ 2]   70 	cpw	x, #0x1201
      000033 27 34            [ 1]   71 	jreq	00115$
      000035 1E 07            [ 2]   72 	ldw	x, (0x07, sp)
      000037 A3 22 20         [ 2]   73 	cpw	x, #0x2220
      00003A 27 2D            [ 1]   74 	jreq	00115$
      00003C 1E 07            [ 2]   75 	ldw	x, (0x07, sp)
      00003E A3 21 08         [ 2]   76 	cpw	x, #0x2108
      000041 27 26            [ 1]   77 	jreq	00115$
      000043 1E 07            [ 2]   78 	ldw	x, (0x07, sp)
      000045 A3 21 04         [ 2]   79 	cpw	x, #0x2104
      000048 27 1F            [ 1]   80 	jreq	00115$
      00004A 1E 07            [ 2]   81 	ldw	x, (0x07, sp)
      00004C A3 21 02         [ 2]   82 	cpw	x, #0x2102
      00004F 27 18            [ 1]   83 	jreq	00115$
      000051 1E 07            [ 2]   84 	ldw	x, (0x07, sp)
      000053 A3 21 01         [ 2]   85 	cpw	x, #0x2101
      000056 27 11            [ 1]   86 	jreq	00115$
      000058 90 AEr00rB7      [ 2]   87 	ldw	y, #___str_0+0
      00005C 4B 55            [ 1]   88 	push	#0x55
      00005E 5F               [ 1]   89 	clrw	x
      00005F 89               [ 2]   90 	pushw	x
      000060 4B 00            [ 1]   91 	push	#0x00
      000062 90 89            [ 2]   92 	pushw	y
      000064 CDr00r00         [ 4]   93 	call	_assert_failed
      000067 5B 06            [ 2]   94 	addw	sp, #6
      000069                         95 00115$:
                                     96 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 87: tempregister = (uint8_t)( ((uint16_t)((uint16_t)I2C_ITPendingBit & ITEN_Mask)) >> 8);
      000069 0F 03            [ 1]   97 	clr	(0x03, sp)
      00006B 7B 07            [ 1]   98 	ld	a, (0x07, sp)
      00006D A4 07            [ 1]   99 	and	a, #0x07
      00006F 95               [ 1]  100 	ld	xh, a
      000070 4F               [ 1]  101 	clr	a
      000071 4F               [ 1]  102 	clr	a
      000072 97               [ 1]  103 	ld	xl, a
                                    104 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 90: enablestatus = (uint8_t)(I2C->ITR & ( uint8_t)tempregister);
      000073 90 AE 52 1A      [ 2]  105 	ldw	y, #0x521a
      000077 90 F6            [ 1]  106 	ld	a, (y)
      000079 89               [ 2]  107 	pushw	x
      00007A 14 01            [ 1]  108 	and	a, (1, sp)
      00007C 85               [ 2]  109 	popw	x
      00007D 6B 01            [ 1]  110 	ld	(0x01, sp), a
                                    111 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 92: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
      00007F 4F               [ 1]  112 	clr	a
      000080 97               [ 1]  113 	ld	xl, a
      000081 7B 07            [ 1]  114 	ld	a, (0x07, sp)
      000083 A4 30            [ 1]  115 	and	a, #0x30
      000085 95               [ 1]  116 	ld	xh, a
                                    117 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 95: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      000086 7B 08            [ 1]  118 	ld	a, (0x08, sp)
      000088 6B 04            [ 1]  119 	ld	(0x04, sp), a
                                    120 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 92: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
      00008A A3 01 00         [ 2]  121 	cpw	x, #0x0100
      00008D 26 14            [ 1]  122 	jrne	00110$
                                    123 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 95: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      00008F AE 52 17         [ 2]  124 	ldw	x, #0x5217
      000092 F6               [ 1]  125 	ld	a, (x)
      000093 14 04            [ 1]  126 	and	a, (0x04, sp)
      000095 4D               [ 1]  127 	tnz	a
      000096 27 08            [ 1]  128 	jreq	00102$
      000098 0D 01            [ 1]  129 	tnz	(0x01, sp)
      00009A 27 04            [ 1]  130 	jreq	00102$
                                    131 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 98: bitstatus = SET;
      00009C A6 01            [ 1]  132 	ld	a, #0x01
      00009E 20 14            [ 2]  133 	jra	00111$
      0000A0                        134 00102$:
                                    135 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 103: bitstatus = RESET;
      0000A0 4F               [ 1]  136 	clr	a
      0000A1 20 11            [ 2]  137 	jra	00111$
      0000A3                        138 00110$:
                                    139 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 109: if (((I2C->SR2 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      0000A3 AE 52 18         [ 2]  140 	ldw	x, #0x5218
      0000A6 F6               [ 1]  141 	ld	a, (x)
      0000A7 14 04            [ 1]  142 	and	a, (0x04, sp)
      0000A9 4D               [ 1]  143 	tnz	a
      0000AA 27 07            [ 1]  144 	jreq	00106$
      0000AC 0D 01            [ 1]  145 	tnz	(0x01, sp)
      0000AE 27 03            [ 1]  146 	jreq	00106$
                                    147 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 112: bitstatus = SET;
      0000B0 A6 01            [ 1]  148 	ld	a, #0x01
                                    149 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 117: bitstatus = RESET;
      0000B2 21                     150 	.byte 0x21
      0000B3                        151 00106$:
      0000B3 4F               [ 1]  152 	clr	a
      0000B4                        153 00111$:
                                    154 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_i2c.i2c_getitstatus.c: 121: return  bitstatus;
      0000B4 5B 04            [ 2]  155 	addw	sp, #4
      0000B6 81               [ 4]  156 	ret
                                    157 	.area CODE
      0000B7                        158 ___str_0:
      0000B7 2F 68 6F 6D 65 2F 67   159 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      0000F3 65 72 2F 73 72 63 2F   160 	.ascii "er/src/stm8s_i2c.i2c_getitstatus.c"
             73 74 6D 38 73 5F 69
             32 63 2E 69 32 63 5F
             67 65 74 69 74 73 74
             61 74 75 73 2E 63
      000115 00                     161 	.db 0x00
                                    162 	.area INITIALIZER
                                    163 	.area CABS (ABS)
