                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Dec 12 21:28:00 2017
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_gpio_gpio_init
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _assert_failed
                                     13 	.globl _GPIO_Init
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 58: void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, GPIO_Mode_TypeDef GPIO_Mode)
                                     43 ;	-----------------------------------------
                                     44 ;	 function GPIO_Init
                                     45 ;	-----------------------------------------
      000000                         46 _GPIO_Init:
      000000 52 05            [ 2]   47 	sub	sp, #5
                                     48 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 64: assert_param(IS_GPIO_MODE_OK(GPIO_Mode));
      000002 0D 0B            [ 1]   49 	tnz	(0x0b, sp)
      000004 27 53            [ 1]   50 	jreq	00116$
      000006 7B 0B            [ 1]   51 	ld	a, (0x0b, sp)
      000008 A1 40            [ 1]   52 	cp	a, #0x40
      00000A 27 4D            [ 1]   53 	jreq	00116$
      00000C 7B 0B            [ 1]   54 	ld	a, (0x0b, sp)
      00000E A1 20            [ 1]   55 	cp	a, #0x20
      000010 27 47            [ 1]   56 	jreq	00116$
      000012 7B 0B            [ 1]   57 	ld	a, (0x0b, sp)
      000014 A1 60            [ 1]   58 	cp	a, #0x60
      000016 27 41            [ 1]   59 	jreq	00116$
      000018 7B 0B            [ 1]   60 	ld	a, (0x0b, sp)
      00001A A1 A0            [ 1]   61 	cp	a, #0xa0
      00001C 27 3B            [ 1]   62 	jreq	00116$
      00001E 7B 0B            [ 1]   63 	ld	a, (0x0b, sp)
      000020 A1 E0            [ 1]   64 	cp	a, #0xe0
      000022 27 35            [ 1]   65 	jreq	00116$
      000024 7B 0B            [ 1]   66 	ld	a, (0x0b, sp)
      000026 A1 80            [ 1]   67 	cp	a, #0x80
      000028 27 2F            [ 1]   68 	jreq	00116$
      00002A 7B 0B            [ 1]   69 	ld	a, (0x0b, sp)
      00002C A1 C0            [ 1]   70 	cp	a, #0xc0
      00002E 27 29            [ 1]   71 	jreq	00116$
      000030 7B 0B            [ 1]   72 	ld	a, (0x0b, sp)
      000032 A1 B0            [ 1]   73 	cp	a, #0xb0
      000034 27 23            [ 1]   74 	jreq	00116$
      000036 7B 0B            [ 1]   75 	ld	a, (0x0b, sp)
      000038 A1 F0            [ 1]   76 	cp	a, #0xf0
      00003A 27 1D            [ 1]   77 	jreq	00116$
      00003C 7B 0B            [ 1]   78 	ld	a, (0x0b, sp)
      00003E A1 90            [ 1]   79 	cp	a, #0x90
      000040 27 17            [ 1]   80 	jreq	00116$
      000042 7B 0B            [ 1]   81 	ld	a, (0x0b, sp)
      000044 A1 D0            [ 1]   82 	cp	a, #0xd0
      000046 27 11            [ 1]   83 	jreq	00116$
      000048 90 AEr00rE4      [ 2]   84 	ldw	y, #___str_0+0
      00004C 4B 40            [ 1]   85 	push	#0x40
      00004E 5F               [ 1]   86 	clrw	x
      00004F 89               [ 2]   87 	pushw	x
      000050 4B 00            [ 1]   88 	push	#0x00
      000052 90 89            [ 2]   89 	pushw	y
      000054 CDr00r00         [ 4]   90 	call	_assert_failed
      000057 5B 06            [ 2]   91 	addw	sp, #6
      000059                         92 00116$:
                                     93 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 65: assert_param(IS_GPIO_PIN_OK(GPIO_Pin));
      000059 0D 0A            [ 1]   94 	tnz	(0x0a, sp)
      00005B 26 11            [ 1]   95 	jrne	00151$
      00005D 90 AEr00rE4      [ 2]   96 	ldw	y, #___str_0+0
      000061 4B 41            [ 1]   97 	push	#0x41
      000063 5F               [ 1]   98 	clrw	x
      000064 89               [ 2]   99 	pushw	x
      000065 4B 00            [ 1]  100 	push	#0x00
      000067 90 89            [ 2]  101 	pushw	y
      000069 CDr00r00         [ 4]  102 	call	_assert_failed
      00006C 5B 06            [ 2]  103 	addw	sp, #6
      00006E                        104 00151$:
                                    105 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 68: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      00006E 16 08            [ 2]  106 	ldw	y, (0x08, sp)
      000070 17 01            [ 2]  107 	ldw	(0x01, sp), y
      000072 1E 01            [ 2]  108 	ldw	x, (0x01, sp)
      000074 1C 00 04         [ 2]  109 	addw	x, #0x0004
      000077 1F 04            [ 2]  110 	ldw	(0x04, sp), x
      000079 1E 04            [ 2]  111 	ldw	x, (0x04, sp)
      00007B F6               [ 1]  112 	ld	a, (x)
      00007C 95               [ 1]  113 	ld	xh, a
      00007D 7B 0A            [ 1]  114 	ld	a, (0x0a, sp)
      00007F 43               [ 1]  115 	cpl	a
      000080 6B 03            [ 1]  116 	ld	(0x03, sp), a
      000082 9E               [ 1]  117 	ld	a, xh
      000083 14 03            [ 1]  118 	and	a, (0x03, sp)
      000085 1E 04            [ 2]  119 	ldw	x, (0x04, sp)
      000087 F7               [ 1]  120 	ld	(x), a
                                    121 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 85: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      000088 1E 01            [ 2]  122 	ldw	x, (0x01, sp)
      00008A 5C               [ 2]  123 	incw	x
      00008B 5C               [ 2]  124 	incw	x
                                    125 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 74: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
      00008C 0D 0B            [ 1]  126 	tnz	(0x0b, sp)
      00008E 2A 20            [ 1]  127 	jrpl	00105$
                                    128 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 78: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      000090 16 01            [ 2]  129 	ldw	y, (0x01, sp)
      000092 90 F6            [ 1]  130 	ld	a, (y)
                                    131 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 76: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
      000094 88               [ 1]  132 	push	a
      000095 7B 0C            [ 1]  133 	ld	a, (0x0c, sp)
      000097 A5 10            [ 1]  134 	bcp	a, #0x10
      000099 84               [ 1]  135 	pop	a
      00009A 27 08            [ 1]  136 	jreq	00102$
                                    137 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 78: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      00009C 1A 0A            [ 1]  138 	or	a, (0x0a, sp)
      00009E 16 01            [ 2]  139 	ldw	y, (0x01, sp)
      0000A0 90 F7            [ 1]  140 	ld	(y), a
      0000A2 20 06            [ 2]  141 	jra	00103$
      0000A4                        142 00102$:
                                    143 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 82: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
      0000A4 14 03            [ 1]  144 	and	a, (0x03, sp)
      0000A6 16 01            [ 2]  145 	ldw	y, (0x01, sp)
      0000A8 90 F7            [ 1]  146 	ld	(y), a
      0000AA                        147 00103$:
                                    148 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 85: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      0000AA F6               [ 1]  149 	ld	a, (x)
      0000AB 1A 0A            [ 1]  150 	or	a, (0x0a, sp)
      0000AD F7               [ 1]  151 	ld	(x), a
      0000AE 20 04            [ 2]  152 	jra	00106$
      0000B0                        153 00105$:
                                    154 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 90: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
      0000B0 F6               [ 1]  155 	ld	a, (x)
      0000B1 14 03            [ 1]  156 	and	a, (0x03, sp)
      0000B3 F7               [ 1]  157 	ld	(x), a
      0000B4                        158 00106$:
                                    159 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 99: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      0000B4 1E 01            [ 2]  160 	ldw	x, (0x01, sp)
      0000B6 1C 00 03         [ 2]  161 	addw	x, #0x0003
                                    162 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 97: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
      0000B9 7B 0B            [ 1]  163 	ld	a, (0x0b, sp)
      0000BB A5 40            [ 1]  164 	bcp	a, #0x40
      0000BD 27 06            [ 1]  165 	jreq	00108$
                                    166 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 99: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      0000BF F6               [ 1]  167 	ld	a, (x)
      0000C0 1A 0A            [ 1]  168 	or	a, (0x0a, sp)
      0000C2 F7               [ 1]  169 	ld	(x), a
      0000C3 20 04            [ 2]  170 	jra	00109$
      0000C5                        171 00108$:
                                    172 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 103: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
      0000C5 F6               [ 1]  173 	ld	a, (x)
      0000C6 14 03            [ 1]  174 	and	a, (0x03, sp)
      0000C8 F7               [ 1]  175 	ld	(x), a
      0000C9                        176 00109$:
                                    177 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 110: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
      0000C9 7B 0B            [ 1]  178 	ld	a, (0x0b, sp)
      0000CB A5 20            [ 1]  179 	bcp	a, #0x20
      0000CD 27 0A            [ 1]  180 	jreq	00111$
                                    181 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 112: GPIOx->CR2 |= (uint8_t)GPIO_Pin;
      0000CF 1E 04            [ 2]  182 	ldw	x, (0x04, sp)
      0000D1 F6               [ 1]  183 	ld	a, (x)
      0000D2 1A 0A            [ 1]  184 	or	a, (0x0a, sp)
      0000D4 1E 04            [ 2]  185 	ldw	x, (0x04, sp)
      0000D6 F7               [ 1]  186 	ld	(x), a
      0000D7 20 08            [ 2]  187 	jra	00113$
      0000D9                        188 00111$:
                                    189 ;	/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driver/src/stm8s_gpio.gpio_init.c: 116: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      0000D9 1E 04            [ 2]  190 	ldw	x, (0x04, sp)
      0000DB F6               [ 1]  191 	ld	a, (x)
      0000DC 14 03            [ 1]  192 	and	a, (0x03, sp)
      0000DE 1E 04            [ 2]  193 	ldw	x, (0x04, sp)
      0000E0 F7               [ 1]  194 	ld	(x), a
      0000E1                        195 00113$:
      0000E1 5B 05            [ 2]  196 	addw	sp, #5
      0000E3 81               [ 4]  197 	ret
                                    198 	.area CODE
      0000E4                        199 ___str_0:
      0000E4 2F 68 6F 6D 65 2F 67   200 	.ascii "/home/grytole/dev/git/stm8builder/stm8builder/stdperiph_driv"
             72 79 74 6F 6C 65 2F
             64 65 76 2F 67 69 74
             2F 73 74 6D 38 62 75
             69 6C 64 65 72 2F 73
             74 6D 38 62 75 69 6C
             64 65 72 2F 73 74 64
             70 65 72 69 70 68 5F
             64 72 69 76
      000120 65 72 2F 73 72 63 2F   201 	.ascii "er/src/stm8s_gpio.gpio_init.c"
             73 74 6D 38 73 5F 67
             70 69 6F 2E 67 70 69
             6F 5F 69 6E 69 74 2E
             63
      00013D 00                     202 	.db 0x00
                                    203 	.area INITIALIZER
                                    204 	.area CABS (ABS)
